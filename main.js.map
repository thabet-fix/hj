{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat/chat.component.html","webpack:///./src/app/chat/chat.component.scss","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/app/connexion/connexion.component.html","webpack:///./src/app/connexion/connexion.component.scss","webpack:///./src/app/connexion/connexion.component.ts","webpack:///./src/app/emploi/emploi-detail/emploi-detail.component.css","webpack:///./src/app/emploi/emploi-detail/emploi-detail.component.html","webpack:///./src/app/emploi/emploi-detail/emploi-detail.component.ts","webpack:///./src/app/emploi/emploi.component.html","webpack:///./src/app/emploi/emploi.component.scss","webpack:///./src/app/emploi/emploi.component.ts","webpack:///./src/app/emploi/emploi.service.ts","webpack:///./src/app/emploi/filtre.pipe.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.scss","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.scss","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/pop-up-connexion.html","webpack:///./src/app/home/pop-up-inscription.html","webpack:///./src/app/inscription/inscription.component.html","webpack:///./src/app/inscription/inscription.component.scss","webpack:///./src/app/inscription/inscription.component.ts","webpack:///./src/app/inscription/inscription.service.ts","webpack:///./src/app/notification/notification.component.html","webpack:///./src/app/notification/notification.component.scss","webpack:///./src/app/notification/notification.component.ts","webpack:///./src/app/shared/data-exchange.service.ts","webpack:///./src/app/utilisateur/education/education.component.css","webpack:///./src/app/utilisateur/education/education.component.html","webpack:///./src/app/utilisateur/education/education.component.ts","webpack:///./src/app/utilisateur/education/education.model.ts","webpack:///./src/app/utilisateur/education/education.service.ts","webpack:///./src/app/utilisateur/experience/experience.component.css","webpack:///./src/app/utilisateur/experience/experience.component.html","webpack:///./src/app/utilisateur/experience/experience.component.ts","webpack:///./src/app/utilisateur/experience/experience.model.ts","webpack:///./src/app/utilisateur/experience/experience.service.ts","webpack:///./src/app/utilisateur/langue/langue.component.css","webpack:///./src/app/utilisateur/langue/langue.component.html","webpack:///./src/app/utilisateur/langue/langue.component.ts","webpack:///./src/app/utilisateur/langue/langue.service.ts","webpack:///./src/app/utilisateur/renumeration/renumeration.component.css","webpack:///./src/app/utilisateur/renumeration/renumeration.component.html","webpack:///./src/app/utilisateur/renumeration/renumeration.component.ts","webpack:///./src/app/utilisateur/renumeration/renumeration.service.ts","webpack:///./src/app/utilisateur/technologie/technologie.component.css","webpack:///./src/app/utilisateur/technologie/technologie.component.html","webpack:///./src/app/utilisateur/technologie/technologie.component.ts","webpack:///./src/app/utilisateur/technologie/technologie.model.ts","webpack:///./src/app/utilisateur/technologie/technologie.service.ts","webpack:///./src/app/utilisateur/utilisateur.component.html","webpack:///./src/app/utilisateur/utilisateur.component.scss","webpack:///./src/app/utilisateur/utilisateur.component.ts","webpack:///./src/app/utilisateur/utilisateur.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-header></app-header>\\r\\n<router-outlet></router-outlet>\\r\\n<app-chat></app-chat>\\r\\n<app-footer></app-footer>\"","module.exports = \"\"","import { Component } from '@angular/core';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent{\r\n  title = 'HelloJob-dev';\r\n  \r\n  ngOnInit(){\r\n    \r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport * as $ from 'jquery'; \r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n \r\n/************** Import des components ************/\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PopUpInscription, PopUpConnexion } from './home/home.component';\r\nimport { ChatComponent } from './chat/chat.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { EmploiComponent } from './emploi/emploi.component';\r\nimport { NotificationComponent } from './notification/notification.component'; \r\n\r\n/************** Import de Material ***************/\r\nimport { MatIconModule, MatChipsModule, MatPaginatorIntl, PageEvent, MatButtonModule, MatCheckboxModule, MatSelectModule, MatInputModule, ErrorStateMatcher, ShowOnDirtyErrorStateMatcher, MatNativeDateModule} from '@angular/material';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSortModule } from '@angular/material/sort';\r\n\r\n/************** Import de Firebase/Firestore *******/\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\r\nimport { AngularFireStorageModule, StorageBucket } from '@angular/fire/storage';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\n\r\n/************** Import des services ****************/\r\nimport { DataExchangeService } from './shared/data-exchange.service';\r\nimport { EmploiService } from './emploi/emploi.service';\r\nimport { InscriptionService } from './inscription/inscription.service';\r\nimport { UtilisateurService } from './utilisateur/utilisateur.service';\r\nimport { EducationService } from './utilisateur/education/education.service';\r\nimport { ExperienceService } from './utilisateur/experience/experience.service';\r\n\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { UtilisateurComponent } from './utilisateur/utilisateur.component';\r\nimport { ConnexionComponent } from './connexion/connexion.component';\r\nimport { InscriptionComponent } from './inscription/inscription.component';\r\nimport { FiltrePipe } from './emploi/filtre.pipe';\r\nimport { EmploiDetailComponent } from './emploi/emploi-detail/emploi-detail.component';\r\nimport { EducationComponent } from './utilisateur/education/education.component';\r\nimport { ExperienceComponent } from './utilisateur/experience/experience.component';\r\nimport { LangueComponent } from './utilisateur/langue/langue.component';\r\nimport { LangueService } from './utilisateur/langue/langue.service';\r\nimport { TechnologieComponent } from './utilisateur/technologie/technologie.component';\r\nimport { TechnologieService } from './utilisateur/technologie/technologie.service';\r\nimport { RenumerationComponent } from './utilisateur/renumeration/renumeration.component';\r\nimport { RenumerationService } from './utilisateur/renumeration/renumeration.service';\r\n\r\nconst appRoutes: Routes= [\r\n  { path: '', redirectTo: '/', pathMatch: 'full' },\r\n  { path: '', component: HomeComponent },\r\n  { path: 'emploi', component: EmploiComponent },\r\n  { path: 'emploi/fiche/:id', component: EmploiDetailComponent },\r\n  { path: 'compte', component: UtilisateurComponent }\r\n];\r\n\r\nexport const firebaseConfig = {\r\n  apiKey: \"AIzaSyBoYsMF0LD_ZR_oR-2ai_LV6JVh3MuF3SY\",\r\n    authDomain: \"hellojob-2d944.firebaseapp.com\",\r\n    databaseURL: \"https://hellojob-2d944.firebaseio.com\",\r\n    projectId: \"hellojob-2d944\",\r\n    storageBucket: \"hellojob-2d944.appspot.com\",\r\n    messagingSenderId: \"25445548653\"\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PopUpInscription,\r\n    PopUpConnexion,\r\n    AppComponent,\r\n    HeaderComponent,\r\n    HomeComponent,\r\n    ChatComponent,\r\n    FooterComponent,\r\n    EmploiComponent,\r\n    NotificationComponent,\r\n    UtilisateurComponent,\r\n    ConnexionComponent,\r\n    InscriptionComponent,\r\n    FiltrePipe,\r\n    EmploiDetailComponent,\r\n    EducationComponent,\r\n    ExperienceComponent,\r\n    LangueComponent,\r\n    TechnologieComponent,\r\n    RenumerationComponent\r\n  ],\r\n  imports: [\r\n    MatSortModule,\r\n    MatSlideToggleModule,\r\n    MatProgressBarModule,\r\n    MatSliderModule,\r\n    ReactiveFormsModule,\r\n    NgbModule.forRoot(),\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule, \r\n    MatCheckboxModule,\r\n    MatSelectModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatPaginatorModule,\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatIconModule,\r\n    MatChipsModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    AngularFireModule.initializeApp(firebaseConfig),\r\n    AngularFirestoreModule,\r\n    AngularFireAuthModule,    \r\n    AngularFireStorageModule,\r\n    FormsModule,\r\n    MatSnackBarModule\r\n  ],\r\n  providers: [\r\n    MatDatepickerModule,\r\n    DataExchangeService, \r\n    EmploiService,\r\n    InscriptionService,\r\n    UtilisateurService,\r\n    EducationService,\r\n    ExperienceService,\r\n    TechnologieService,\r\n    LangueService,\r\n    RenumerationService,\r\n    {provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher},\r\n    {provide: MatPaginatorIntl, useClass: EmploiComponent},\r\n    {provide: StorageBucket, useValue: 'hellojob-2d944.appspot.com'}\r\n  ],\r\n  entryComponents: [\r\n    PopUpInscription,\r\n    PopUpConnexion,\r\n    NotificationComponent\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div class=\\\"say-hello\\\">\\r\\n  <div class=\\\"label-hello\\\">\\r\\n    Une questions ?\\r\\n  </div>\\r\\n  <!-- /.label-hello -->\\r\\n  <div class=\\\"bulle-hello\\\">\\r\\n    SAY HELLO !\\r\\n  </div>\\r\\n  <!-- /.bulle-hello -->\\r\\n</div>\\r\\n<!-- /.say-hello -->\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.scss']\r\n})\r\nexport class ChatComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  connexion works!\\r\\n</p>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-connexion',\r\n  templateUrl: './connexion.component.html',\r\n  styleUrls: ['./connexion.component.scss']\r\n})\r\nexport class ConnexionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"img-header\\\">\\r\\n        <img src=\\\"assets/images/header-compte.jpg\\\" class=\\\"img-responsive\\\" alt=\\\"\\\">\\r\\n    </div>\\r\\n    <!-- /.img-header -->\\r\\n\\r\\n    <div class=\\\"fils-ariane\\\">\\r\\n        <a [routerLink]=\\\"['/']\\\">Accueil</a> > <a [routerLink]=\\\"['/emploi']\\\">Emploi</a> <span *ngIf=\\\"(item | async)?.lieu!==undefined\\\"> > </span> <a [routerLink]=\\\"\\\" (click)=\\\"onClickLieu()\\\">{{ (item | async)?.lieu }}</a> <span *ngIf=\\\"(item | async)?.secteur!==undefined\\\"> > </span> <a [routerLink]=\\\"\\\" (click)=\\\"onClickSecteur()\\\">{{ (item | async)?.secteur }}</a> > {{ (item | async)?.titre }}\\r\\n    </div>\\r\\n    <!-- /.fils-ariane -->\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n            <h1 class=\\\"titre-interne\\\" *ngIf=\\\"(item | async)?.titre!==undefined\\\">\\r\\n                {{ (item | async)?.titre }}\\r\\n            </h1>\\r\\n            <!-- /.titre-interne -->\\r\\n\\r\\n            <h2 class=\\\"sous-titre-interne\\\" *ngIf=\\\"(item | async)?.description_generale!==undefined\\\">\\r\\n                À propos de cette offre :\\r\\n            </h2>\\r\\n            <!-- /.sous-titre-interne -->\\r\\n\\r\\n            <div class=\\\"desc-interne\\\" *ngIf=\\\"(item | async)?.description_generale!==undefined\\\">\\r\\n                {{ (item | async)?.description_generale }}\\r\\n            </div>\\r\\n            <!-- /.desc-interne -->\\r\\n            \\r\\n            <h2 class=\\\"sous-titre-interne\\\" *ngIf=\\\"(item | async)?.description!==undefined\\\">\\r\\n                Descriptif du poste :\\r\\n            </h2>\\r\\n            <!-- /.sous-titre-interne -->\\r\\n\\r\\n            <div class=\\\"desc-interne\\\" *ngIf=\\\"(item | async)?.description!==undefined\\\">\\r\\n                {{ (item | async)?.description }}\\r\\n            </div>\\r\\n            <!-- /.desc-interne -->\\r\\n            \\r\\n            <h2 class=\\\"sous-titre-interne\\\" *ngIf=\\\"(item | async)?.description_profile!==undefined\\\">\\r\\n                Profil recherché :\\r\\n            </h2>\\r\\n            <!-- /.sous-titre-interne -->\\r\\n\\r\\n            <div class=\\\"desc-interne\\\" *ngIf=\\\"(item | async)?.description_profile!==undefined\\\">\\r\\n                {{ (item | async)?.description_profile }}\\r\\n            </div>\\r\\n            <!-- /.desc-interne -->\\r\\n\\r\\n            <div class=\\\"offre-similaire\\\">\\r\\n                <div class=\\\"titre-recherche\\\">\\r\\n                    Ces offres peuvent également vous intéresser\\r\\n                </div>\\r\\n                <!-- /.titre-recherche -->\\r\\n                \\r\\n\\r\\n                <div class=\\\"item-job\\\" *ngFor=\\\"let emploi of emplois | filtre:reactifMotCle:secteur:reactifPays:reactifContrat:reactifRenumeration | slice:0:4\\\">\\r\\n                    <div class=\\\"container-img-offre\\\"><img class=\\\"img-offre\\\" alt=\\\"nom de la société\\\" src=\\\"img/jobicon.png\\\"/></div>\\r\\n                    <div class=\\\"jobdetail\\\">\\r\\n                        <h3 class=\\\"titre-offre\\\">{{emploi.titre}}</h3>\\r\\n                        <span class=\\\"contrat-offre\\\">{{emploi.type_contrat}}</span>\\r\\n                        <span class=\\\"type-offre\\\">{{emploi.type_temp}}</span>\\r\\n                        <div class=\\\"clearfix\\\"></div>\\r\\n                        <p class=\\\"societe-offre\\\">{{emploi.partenaire}}</p>\\r\\n                        <p class=\\\"adresse-offre\\\">{{emploi.lieu}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"clearfix\\\"></div>\\r\\n                    <a href=\\\"#\\\" class=\\\"detail-offre\\\">+ Détails</a>\\r\\n                </div>\\r\\n                <!-- /.item-job -->\\r\\n\\r\\n                \\r\\n            </div>\\r\\n            <!-- /.offre-similaire -->\\r\\n\\r\\n        </div>\\r\\n        <!-- /.col-sm-8 -->\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n            \\r\\n            <div class=\\\"job-infos-cles\\\">\\r\\n                <div class=\\\"titre-infos\\\">\\r\\n                    INFOS CL&Eacute;S\\r\\n                </div>\\r\\n                <!-- /.titre-infos -->\\r\\n                <div class=\\\"sous-titre-infos\\\" *ngIf=\\\"(item | async)?.lieu!==undefined\\\">\\r\\n                    <span>Lieu de poste</span>\\r\\n                    {{ (item | async)?.lieu }}\\r\\n                </div>\\r\\n                <!-- /.sous-titre-infos -->\\r\\n                <div class=\\\"sous-titre-infos\\\" *ngIf=\\\"(item | async)?.type_contrat!==undefined\\\">\\r\\n                    <span>Type de contrat</span>\\r\\n                    {{ (item | async)?.type_contrat }}\\r\\n                </div>\\r\\n                <!-- /.sous-titre-infos -->\\r\\n                <div class=\\\"sous-titre-infos\\\" *ngIf=\\\"(item | async)?.renumeration!==undefined\\\">\\r\\n                    <span>Salaire</span>\\r\\n                    {{ (item | async)?.renumeration }}\\r\\n                </div>\\r\\n                <!-- /.sous-titre-infos -->\\r\\n                <div class=\\\"sous-titre-infos\\\" *ngIf=\\\"(item | async)?.secteur!==undefined\\\">\\r\\n                    <span>Secteur d'activité</span>\\r\\n                    {{ (item | async)?.secteur }}\\r\\n                </div>\\r\\n                <!-- /.sous-titre-infos -->\\r\\n                <div class=\\\"sous-titre-infos\\\" *ngIf=\\\"(item | async)?.niveau_etude!==undefined\\\">\\r\\n                    <span>Niveau d'études</span>\\r\\n                    {{ (item | async)?.niveau_etude }}\\r\\n                </div>\\r\\n                <!-- /.sous-titre-infos -->\\r\\n                <div class=\\\"sous-titre-infos\\\" *ngIf=\\\"(item | async)?.experience!==undefined\\\">\\r\\n                    <span>Niveau de poste</span>\\r\\n                    {{ (item | async)?.experience }}\\r\\n                </div>\\r\\n                <!-- /.sous-titre-infos -->\\r\\n                <div class=\\\"btn-infos\\\">\\r\\n                    <button class=\\\"waves-effect waves-light btn\\\">Postuler</button>\\r\\n                </div>\\r\\n                <!-- /.btn-infos -->\\r\\n                \\r\\n            </div>\\r\\n            <!-- /.job-infos-cles -->\\r\\n            <div class=\\\"partage-annonce\\\">\\r\\n                Partagez cette offre\\r\\n                <div class=\\\"footer-follow\\\">\\r\\n                    <a href=\\\"#\\\"><i class=\\\"fa fa-envelope\\\"></i></a>\\r\\n                    <a href=\\\"#\\\"><i class=\\\"fa fa-facebook-f\\\"></i></a>\\r\\n                    <a href=\\\"#\\\"><i class=\\\"fa fa-twitter\\\"></i></a>\\r\\n                    <a href=\\\"#\\\"><i class=\\\"fa fa-linkedin\\\"></i></a>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /.partage-annonce -->\\r\\n            <div class=\\\"inscription-mobile\\\">\\r\\n                <a href=\\\"\\\"><img src=\\\"img/newsletter-mobile.jpg\\\" class=\\\"img-responsive\\\" alt=\\\"\\\"></a>\\r\\n            </div>\\r\\n            <!-- /.inscription-mobile -->\\r\\n            <div class=\\\"inscription-mobile\\\">\\r\\n                <a href=\\\"\\\"><img src=\\\"img/inscription-mobile.jpg\\\" class=\\\"img-responsive\\\" alt=\\\"\\\"></a>\\r\\n            </div>\\r\\n            <!-- /.inscription-mobile -->\\r\\n            \\r\\n        </div>\\r\\n        <!-- /.col-sm-4 -->\\r\\n\\r\\n    </div>\\r\\n    <!-- /.row -->\\r\\n    \\r\\n    \\r\\n</div>\\r\\n<!-- /.container -->\\r\\n\\r\\n<div class=\\\"barre-annonce\\\">\\r\\n        <button class=\\\"waves-effect waves-light btn btn-gris\\\" (click)=\\\"onClickEmploi()\\\">Retour à la recherche</button>\\r\\n        <button class=\\\"waves-effect waves-light btn btn-gris\\\" (click)=\\\"onClickSecteur()\\\">Offres Similaires</button>\\r\\n        <button class=\\\"waves-effect waves-light btn\\\">Postuler à cette offre</button>\\r\\n        <a class=\\\"btn-floating btn-medium waves-effect waves-light rouge\\\"><i class=\\\"tiny-size material-icons\\\">favorite</i></a> <span>Sauvegarder</span>\\r\\n        <a class=\\\"btn-floating btn-medium waves-effect waves-light rouge\\\"><i class=\\\"tiny-size material-icons\\\">local_printshop</i></a> <span>Imprimer</span>\\r\\n</div>\\r\\n<!-- /.barre-annonce -->\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { EmploiService } from '../emploi.service';\r\nimport { Emploi } from '../emploi.model';\r\nimport { Subscription, Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-emploi-detail',\r\n  templateUrl: './emploi-detail.component.html',\r\n  styleUrls: ['./emploi-detail.component.css']\r\n})\r\nexport class EmploiDetailComponent implements OnInit {\r\n\r\n  constructor( private router:Router, private route: ActivatedRoute, private emploiService: EmploiService) { }\r\n  item: Observable<Emploi>;\r\n  emploi: Emploi[];\r\n  emplois: Emploi[];\r\n  lieu: string;\r\n  secteur: string;\r\n  reactifMotCle: string;\r\n  emploiSubscription: Subscription;\r\n  \r\n\r\n  ngOnInit() {\r\n    this.item = this.emploiService.getEmploi();\r\n    this.item.subscribe((datas) => { \r\n      console.log(\"datas\", datas) \r\n      this.lieu = datas.lieu;\r\n      this.secteur = datas.secteur;\r\n      },\r\n      (err)=>{ console.log(\"probleme : \", err) }\r\n    );\r\n\r\n    this.emploiService.emploisChanged\r\n      .subscribe(emplois => {\r\n          this.emplois = emplois; \r\n        });\r\n    this.emploiService.getEmplois();\r\n  }\r\n  \r\n  onClickLieu(){\r\n    this.emploiService.setTmpPays(this.lieu);\r\n    this.emploiService.setTmpSecteur(undefined);\r\n    this.router.navigate(['./emploi']);\r\n  }\r\n\r\n  onClickSecteur(){\r\n    this.emploiService.setTmpPays(undefined);\r\n    this.emploiService.setTmpSecteur(this.secteur);\r\n    this.router.navigate(['./emploi']);\r\n  }\r\n\r\n  onClickEmploi(){\r\n    this.router.navigate(['./emploi']);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <div class=\\\"img-header\\\">\\r\\n            <img src=\\\"assets/images/header-liste.jpg\\\" class=\\\"img-responsive\\\" alt=\\\"\\\">\\r\\n        </div>\\r\\n        <!-- /.img-header -->\\r\\n        <h1 class=\\\"titre-page\\\">\\r\\n            <span>\\r\\n                Nous avons trouvé {{ (emplois | filtre:reactifMotCle:reactifSecteur:reactifPays:reactifContrat:reactifRenumeration:reactifExperience)?.length }}\\r\\n                <span *ngIf=\\\"(emplois | filtre:reactifMotCle:reactifSecteur:reactifPays:reactifContrat:reactifRenumeration:reactifExperience)?.length < 2, else plusieur;\\\">offre</span> \\r\\n                <ng-template #plusieur>offres</ng-template> \\r\\n                d'emploi pour vous\\r\\n            </span>\\r\\n            \\r\\n        </h1>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4 filtre-recherche\\\">\\r\\n                <form #formFiltreEmploi=\\\"ngForm\\\" (ngSubmit)=\\\"onClickChercher(formFiltreEmploi)\\\">\\r\\n                  <div class=\\\"titre-recherche\\\">\\r\\n                      Recherche d'emploi\\r\\n                  </div>\\r\\n                  <!-- /.titre-recherche -->\\r\\n                  <mat-chip-list #chipList>\\r\\n                    <mat-chip *ngFor=\\\"let chipFilter of chipsFilter; let i = index\\\"  \\r\\n                        [removable]=\\\"removable\\\"\\r\\n                        (removed)=\\\"remove(formFiltreEmploi,i,chipFilter.type)\\\">\\r\\n                        {{chipFilter.critere}}\\r\\n                        <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n                    </mat-chip>\\r\\n                  </mat-chip-list><br>\\r\\n                  <mat-form-field class=\\\"validate white\\\">\\r\\n                    <input matInput placeholder=\\\"Mots-clé ...\\\" name=\\\"tmpMotCleInput\\\" [(ngModel)]=\\\"reactifMotCle\\\">\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <mat-select name=\\\"tmpSecteurInput\\\" placeholder=\\\"Secteur ..\\\" [(ngModel)]=\\\"reactifSecteur\\\" (selectionChange)=\\\"onChangeSelect(formFiltreEmploi,'reactifSecteur')\\\">\\r\\n                      <mat-option [value]=\\\"undefined\\\" selected>-- Tous les secteurs --</mat-option>\\r\\n                      <mat-option [value]=\\\"secteur[0].secteur\\\" *ngFor=\\\"let secteur of secteurs\\\"\\r\\n                      >{{ secteur[0].secteur }}</mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <mat-select name=\\\"tmpTypeEmploiInput\\\" placeholder=\\\"Contrat de type ..\\\" [(ngModel)]=\\\"reactifContrat\\\" (selectionChange)=\\\"onChangeSelect(formFiltreEmploi,'reactifContrat')\\\">\\r\\n                      <mat-option [value]=\\\"undefined\\\" selected>-- Tous les types --</mat-option>\\r\\n                      <mat-option [value]=\\\"typeEmploi[0].type_contrat\\\" *ngFor=\\\"let typeEmploi of typeEmplois\\\">{{ typeEmploi[0].type_contrat }}</mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <mat-select name=\\\"tmpPaysInput\\\" placeholder=\\\"Emplacement ..\\\" [(ngModel)]=\\\"reactifPays\\\" (selectionChange)=\\\"onChangeSelect(formFiltreEmploi,'reactifPays')\\\">\\r\\n                        <mat-option [value]=\\\"undefined\\\" selected>-- Tous les pays --</mat-option>\\r\\n                        <mat-option [value]=\\\"lieu[0].lieu\\\" *ngFor=\\\"let lieu of lieux\\\">{{ lieu[0].lieu }}</mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <mat-select name=\\\"tmpRenumerationInput\\\" placeholder=\\\"Rémunération ..\\\" [(ngModel)]=\\\"reactifRenumeration\\\" (selectionChange)=\\\"onChangeSelect(formFiltreEmploi,'reactifRenumeration')\\\">\\r\\n                      <mat-option [value]=\\\"undefined\\\" selected>-- Toutes les rénumérations --</mat-option>\\r\\n                      <mat-option [value]=\\\"renumeration[0].renumeration\\\" *ngFor=\\\"let renumeration of renumerations\\\">{{ renumeration[0].renumeration }}</mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <mat-select name=\\\"tmpExperienceInput\\\" placeholder=\\\"Niveau d'expérience ..\\\" [(ngModel)]=\\\"reactifExperience\\\" (selectionChange)=\\\"onChangeSelect(formFiltreEmploi,'reactifExperience')\\\">\\r\\n                      <mat-option [value]=\\\"undefined\\\" selected>-- Tous les expériences --</mat-option>\\r\\n                      <mat-option [value]=\\\"experience[0].experience\\\" *ngFor=\\\"let experience of experiences\\\">{{ experience[0].experience }}</mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                          <div class=\\\"col-xs-12 right\\\">\\r\\n                            <button type=\\\"submit\\\" class=\\\"bg-rouge\\\" mat-button color=\\\"warn\\\" mat-raised-button (click)=\\\"onClickReset()\\\">\\r\\n                                Réinitialiser <i class=\\\"fa fa-search\\\"></i>\\r\\n                            </button>\\r\\n                          </div>\\r\\n                          <!-- /.col-xs-6 -->\\r\\n                      </div>\\r\\n                      <!-- /.row -->\\r\\n                  </div>\\r\\n                  <!-- /.input-group -->\\r\\n                </form>  \\r\\n                <div class=\\\"titre-recherche\\\">\\r\\n                    Emplois par secteur\\r\\n                </div>\\r\\n                <!-- /.titre-recherche -->\\r\\n                <div class=\\\"bloc-secteur\\\">\\r\\n                    <div class=\\\"un-secteur\\\" *ngFor=\\\"let secteur of secteurs\\\">\\r\\n                        <a [routerLink]=\\\"\\\" [className]=\\\"reactifSecteur === secteur[0].secteur ? 'strong' : ''\\\" (click)=\\\"reactifSecteur = secteur[0].secteur\\\">\\r\\n                            <label>{{ secteur[0].secteur }}</label>\\r\\n                            <span class=\\\"nbr-secteur\\\">({{ secteur.length }})</span>\\r\\n                            <span class=\\\"clearfix\\\"></span>\\r\\n                        </a>                        \\r\\n                    </div>\\r\\n                    <!-- /.un-secteur -->\\r\\n                </div>\\r\\n                <!-- /.bloc-secteur -->\\r\\n                <div class=\\\"voir-tous\\\">\\r\\n                    <a [routerLink]=\\\"\\\" (click)=\\\"reactifSecteur = undefined\\\">Voir tout</a>\\r\\n                </div>\\r\\n                <!-- /.voir-tous -->\\r\\n                <div class=\\\"inscription-mobile\\\">\\r\\n                    <a href=\\\"\\\"><img src=\\\"assets/images/inscription-mobile.jpg\\\" class=\\\"img-responsive\\\" alt=\\\"\\\"></a>\\r\\n                </div>\\r\\n                <!-- /.inscription-mobile -->\\r\\n            </div>\\r\\n            <!-- /.col-sm-4 -->\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n                \\r\\n\\r\\n                <div class=\\\"container-result\\\">\\r\\n                    <div class=\\\"filter-liste\\\">\\r\\n                        <button class=\\\"waves-effect waves-light btn\\\"><i class=\\\"fa fa-bell\\\" aria-hidden=\\\"true\\\"></i> M'envoyer des offres pareils</button>\\r\\n                    </div>\\r\\n                    <!-- /.filter-liste -->\\r\\n                    <mat-paginator [length]=\\\"(emplois | filtre:reactifMotCle:reactifSecteur:reactifPays:reactifContrat:reactifRenumeration:reactifExperience)?.length\\\"\\r\\n                            [pageSize]=\\\"pageSize\\\"\\r\\n                            [pageSizeOptions]=\\\"pageSizeOptions\\\"\\r\\n                            (page)=\\\"pageEvent = getPaginationData($event)\\\">\\r\\n                    </mat-paginator>\\r\\n                    <div class=\\\"job-liste\\\" *ngIf=\\\"emplois; let emplois; else loading\\\">\\r\\n                        <div class=\\\"une-offre\\\" *ngFor=\\\"let emploi of emplois | filtre:reactifMotCle:reactifSecteur:reactifPays:reactifContrat:reactifRenumeration:reactifExperience | slice:pageIndex*pageSize:pageIndex*pageSize+pageSize\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-9 col-sm-8\\\">\\r\\n                                    <h2 class=\\\"titre-liste\\\">\\r\\n                                        {{ emploi.titre }}\\r\\n                                    </h2>\\r\\n                                    <!-- /.titre-liste -->\\r\\n                                    <div class=\\\"desc-liste\\\">\\r\\n                                        {{ emploi.descriptionTronque }}\\r\\n                                    </div>\\r\\n                                    <!-- /.desc-liste -->\\r\\n                                    <div class=\\\"type-liste\\\">\\r\\n                                        {{ emploi.lieu }} - <span>{{ emploi.secteur }}</span>\\r\\n                                    </div>\\r\\n                                    <!-- /.type-liste -->\\r\\n                                    <!--<div class=\\\"adresse-liste\\\">\\r\\n                                        16 rue tarek ibn zied، menzeh 5 - 2091\\r\\n                                    </div>-->\\r\\n                                    <!-- /.adresse-liste -->\\r\\n                                    <div class=\\\"partage-offre\\\">\\r\\n                                        <a href=\\\"#\\\"><i class=\\\"material-icons left\\\">email</i> Envoyer à un ami</a>\\r\\n                                        <a href=\\\"#\\\"><i class=\\\"material-icons left\\\">favorite</i> Enregistrer</a>\\r\\n                                        <a href=\\\"#\\\"><i class=\\\"material-icons left\\\">share</i> Partager</a>\\r\\n                                    </div>\\r\\n                                    <!-- /.partage-offre -->\\r\\n                                </div>\\r\\n                                <!-- /.col-md-9 col-sm-8 -->\\r\\n                                <div class=\\\"col-md-3 col-sm-4\\\">\\r\\n                                    <button class=\\\"bg-rouge color-blanc\\\" mat-button mat-raised-button (click)=\\\"onClickAfficherPlus(emploi.$key, emploi.titre)\\\">\\r\\n                                        Afficher plus\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                                <!-- /.col-md-3 col-sm-4 -->\\r\\n                            </div>\\r\\n                            <!-- /.row -->\\r\\n                        </div>\\r\\n                        <!-- /.une-offre -->\\r\\n                        <ng-template #loading>Chargement des emplois&hellip;</ng-template>\\r\\n                        \\r\\n                    </div>\\r\\n                    <!-- /.job-liste -->\\r\\n                    \\r\\n                </div>\\r\\n                <!-- /.container-result -->\\r\\n                \\r\\n                \\r\\n            </div>\\r\\n            <!-- /.col-sm-8 -->\\r\\n        </div>\\r\\n        <!-- /.row -->\\r\\n    </div>\\r\\n    <!-- /.container -->\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { EmploiService } from './emploi.service';\r\nimport { Emploi } from './emploi.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { NgForm } from '@angular/forms';\r\nimport { PageEvent, MatPaginatorIntl, MatChipInputEvent, MatIconModule } from '@angular/material';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-emploi',\r\n  templateUrl: './emploi.component.html',\r\n  styleUrls: ['./emploi.component.scss']\r\n})\r\nexport class EmploiComponent extends MatPaginatorIntl implements OnInit {\r\n\r\n  constructor(private emploiService: EmploiService, private router:Router, private route: ActivatedRoute) {\r\n    super();\r\n  }\r\n\r\n  @ViewChild(NgForm) formFiltreEmploi: NgForm;\r\n\r\n  tmpMotCle: String;\r\n  tmpSecteur: String;\r\n  tmpPays: String;\r\n  emplois: Emploi[];\r\n  emploiSubscription: Subscription;\r\n  secteurs: Emploi[];\r\n  lieux: Emploi[];\r\n  typeEmplois: Emploi[];\r\n  renumerations: Emploi[];\r\n  experiences: Emploi[];\r\n  \r\n  reactifMotCle  = this.emploiService.getTmpMotCle();  \r\n  reactifSecteur = this.emploiService.getTmpSecteur();  \r\n  reactifPays    = this.emploiService.getTmpPays();\r\n  reactifContrat  = this.emploiService.getTmpContrat();\r\n  reactifRenumeration = this.emploiService.getTmpRenumeration();\r\n  reactifExperience    = this.emploiService.getTmpExperience();\r\n\r\n  /******** Pagination */\r\n  pageEvent: PageEvent;\r\n  length = 100;\r\n  pageIndex = 0;\r\n  pageSize = 5;\r\n  pageSizeOptions: number[] = [5, 10, 25, 100];\r\n  itemsPerPageLabel = 'Offres par page';\r\n  nextPageLabel     = 'Page suivante';\r\n  previousPageLabel = 'Page précédente';\r\n\r\n  public getPaginationData(event?:PageEvent){\r\n    this.pageSize = event.pageSize;\r\n    this.pageIndex = event.pageIndex;\r\n    return event;\r\n  }\r\n\r\n  /******* Chips Filter */\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  chipsFilter = [];\r\n   \r\n  remove(form: NgForm, item, type){\r\n    this.chipsFilter.splice(item, 1);\r\n    console.log(type)\r\n    switch(type){\r\n        case 'reactifSecteur': { \r\n            this.emploiService.setTmpSecteur(undefined);\r\n            this.reactifSecteur = undefined;\r\n            break; \r\n        } \r\n        case 'reactifPays': { \r\n            this.emploiService.setTmpPays(undefined);\r\n            this.reactifPays = undefined\r\n            break; \r\n        } \r\n        case 'reactifContrat': { \r\n            this.emploiService.setTmpContrat(undefined);\r\n            this.reactifContrat = undefined\r\n            break; \r\n        } \r\n        case 'reactifRenumeration': { \r\n          this.emploiService.setTmpContrat(undefined);\r\n          this.reactifRenumeration = undefined\r\n          break; \r\n        } \r\n        case 'reactifExperience': { \r\n          this.emploiService.setTmpContrat(undefined);\r\n          this.reactifExperience = undefined\r\n          break; \r\n        } \r\n        default: {\r\n            break; \r\n        } \r\n    }\r\n  }\r\n\r\n  \r\n  \r\n  ngOnInit() {\r\n    this.emploiSubscription = this.emploiService.emploisChanged\r\n      .subscribe(emplois => {\r\n          this.emplois = emplois; \r\n          console.log(emplois)\r\n          this.secteurs = Object.values(this.groupBy(this.emplois.filter(data => {\r\n            return data.secteur !== undefined \r\n          }), 'secteur')); //on filtre les enregistrement undefined avec la fonction .filter puis on applique le groupBy\r\n          this.lieux = Object.values(this.groupBy(this.emplois.filter(data => {\r\n            return data.lieu !== undefined\r\n          }), 'lieu'));\r\n          this.typeEmplois = Object.values(this.groupBy(this.emplois.filter(data => {\r\n            return data.type_contrat !== undefined\r\n          }), 'type_contrat'));\r\n          this.renumerations = Object.values(this.groupBy(this.emplois.filter(data => {\r\n            return data.renumeration !== undefined\r\n          }), 'renumeration'));\r\n          this.experiences = Object.values(this.groupBy(this.emplois.filter(data => {\r\n            return data.experience !== undefined\r\n          }), 'experience'));\r\n          this.initChipsFilter();\r\n        });\r\n    this.emploiService.getEmplois();\r\n    \r\n  }\r\n\r\n  initChipsFilter(){\r\n    this.addChipsFilter(this.reactifSecteur, \"reactifSecteur\");\r\n    this.addChipsFilter(this.reactifPays, \"reactifPays\");\r\n    this.addChipsFilter(this.reactifContrat, \"reactifContrat\");\r\n    this.addChipsFilter(this.reactifRenumeration, \"reactifRenumeration\");\r\n    this.addChipsFilter(this.reactifExperience, \"reactifExperience\");\r\n  }\r\n\r\n  addChipsFilter(critere:any, type: string){\r\n    \r\n      this.chipsFilter.map(function(item, index, array){\r\n        if(item.type.indexOf(type) === 0){\r\n          array.splice(index, 1);\r\n        }\r\n      })\r\n      if(critere!==undefined)\r\n      this.chipsFilter.push({\"critere\" : critere, \"type\" : type})    \r\n  }\r\n\r\n  onChangeSelect(form: NgForm, type:string){\r\n     switch(type){\r\n      case 'reactifSecteur': { \r\n          this.emploiService.setTmpSecteur(form.value.tmpSecteurInput?form.value.tmpSecteurInput:undefined);\r\n          this.addChipsFilter(this.reactifSecteur, \"reactifSecteur\");\r\n          break; \r\n      } \r\n      case 'reactifPays': { \r\n          this.emploiService.setTmpPays(form.value.tmpPaysInput?form.value.tmpPaysInput:undefined);\r\n          this.addChipsFilter(this.reactifPays, \"reactifPays\");\r\n          break; \r\n      } \r\n      case 'reactifContrat': { \r\n          this.emploiService.setTmpContrat(form.value.tmpTypeEmploiInput?form.value.tmpTypeEmploiInput:undefined);\r\n          this.addChipsFilter(this.reactifContrat, \"reactifContrat\");\r\n          break; \r\n      } \r\n      case 'reactifRenumeration': { \r\n        this.emploiService.setTmpContrat(form.value.tmpRenumerationInput?form.value.tmpRenumerationInput:undefined);\r\n        this.addChipsFilter(this.reactifRenumeration, \"reactifRenumeration\");\r\n        break; \r\n      } \r\n      case 'reactifExperience': { \r\n        this.emploiService.setTmpContrat(form.value.tmpExperienceInput?form.value.tmpExperienceInput:undefined);\r\n        this.addChipsFilter(this.reactifExperience, \"reactifExperience\");\r\n        break; \r\n      } \r\n      default: {\r\n          break; \r\n      } \r\n     }\r\n  }\r\n  \r\n  onClickAfficherPlus(idEmploi: number, titreEmploi: string){\r\n    this.emploiService.setIdEmploi(idEmploi)\r\n    this.router.navigate(['fiche/'+titreEmploi], {relativeTo: this.route});\r\n  }\r\n\r\n  onClickReset() {\r\n    this.formFiltreEmploi.reset();\r\n    this.chipsFilter=[];\r\n  }\r\n\r\n  onClickRemove(){\r\n    console.log(\"essai\")\r\n    this.visible = false;\r\n  }\r\n\r\n  groupBy (xs, key) {\r\n    return xs.reduce(function(rv, x) {\r\n      (rv[x[key]] = rv[x[key]] || []).push(x);\r\n      return rv;\r\n    }, {});\r\n  };\r\n\r\n  \r\n\r\n}\r\n","import { AngularFirestore } from '@angular/fire/firestore';\r\n\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Emploi } from './emploi.model';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class EmploiService{\r\n    emploisLocalTmp : Emploi[];\r\n    emploiLocalStorage : Emploi[];\r\n    emploisChanged = new Subject<Emploi[]>();\r\n    emploiChanged = new Subject<Emploi[]>();\r\n    nbrEmploisChanged = new Subject<Emploi[]>();\r\n    secteur$: BehaviorSubject<string|null>;\r\n    tmpSecteurObs=  new Subject<String>();\r\n\r\n    tmpMotCle: String;\r\n    tmpSecteur: String;\r\n    tmpPays: String;\r\n    tmpContrat: String;\r\n    tmpRenumeration: String;\r\n    tmpExperience: String;\r\n    tmpIdEmploi: any;\r\n\r\n    constructor(private afs: AngularFirestore) {\r\n    }\r\n\r\n    getEmplois(){\r\n        //return this.afs.collection('emplois').valueChanges();\r\n        return this.afs.collection<any>('emplois')\r\n        .snapshotChanges()\r\n            .map(actions => {\r\n                return actions.map(action => ({ \r\n                    $key: action.payload.doc.id, \r\n                    descriptionTronque: action.payload.doc.data().description?this.truncateText(action.payload.doc.data().description, 100, '..'):'',\r\n                    ...action.payload.doc.data() \r\n                }));\r\n            })\r\n            .subscribe(\r\n                (response: Emploi[]) => {\r\n                    this.emploisLocalTmp = response;\r\n                    this.emploisChanged.next([...this.emploisLocalTmp]); // spread operator to create a copy\r\n                }\r\n            );\r\n    }\r\n    \r\n    setIdEmploi(idEmploi:any){\r\n        this.tmpIdEmploi = idEmploi;\r\n    }\r\n\r\n    getEmploi(){\r\n        return this.afs.doc<any>('emplois/'+this.tmpIdEmploi).valueChanges();\r\n    }\r\n    \r\n\r\n    /*getEmploisParSecteur(){\r\n        return this.afs.collection<any>('emplois', ref => ref.where('secteur', '==', 'Développement Mobile'))\r\n        .snapshotChanges()\r\n            .map(actions => {\r\n                return actions.map(action => ({ $key: action.payload.doc.id, ...action.payload.doc.data() }));\r\n            })\r\n            .subscribe(\r\n                (response: Emploi[]) => {\r\n                    this.emploisLocalTmp = response;\r\n                    this.emploisChanged.next([...this.emploisLocalTmp]); // spread operator to create a copy\r\n                }\r\n            );\r\n    }\r\n\r\n    getEmploisParCritere(motCle: String, secteur: String, pays:String) {\r\n      \r\n        // return this.afs.collection<any>('emplois', ref => ref.where('titre', '==', motCle?motCle:null).where('secteur', '==', secteur?secteur:null).where('lieu', '==', pays?pays:null))\r\n        return this.afs.collection<any>('emplois', ref => \r\n            {\r\n            let query : firebase.firestore.CollectionReference | firebase.firestore.Query = ref;\r\n            if (motCle!==\"\") { query = query.where('titre', '==', motCle) };\r\n            if (secteur!==\"\") { query = query.where('secteur', '==', secteur) };\r\n            if (pays!==\"\") { query = query.where('lieu', '==', pays) };\r\n            return query;\r\n          })\r\n        \r\n        .snapshotChanges()\r\n            .map(actions => {\r\n                return actions.map(action => ({ $key: action.payload.doc.id, ...action.payload.doc.data() }));\r\n            })\r\n            .subscribe(\r\n                (response: Emploi[]) => {\r\n                    this.emploisLocalTmp = response;\r\n                    this.emploisChanged.next([...this.emploisLocalTmp]); // spread operator to create a copy\r\n                }\r\n            );\r\n\r\n            \r\n    }*/\r\n\r\n    getTmpMotCle(){\r\n        return this.tmpMotCle;\r\n    }\r\n    getTmpSecteur(){\r\n        return this.tmpSecteur;\r\n    }\r\n    getTmpSecteurObs(){\r\n        this.tmpSecteurObs.next(this.tmpSecteur);\r\n        return this.tmpSecteur;\r\n    }\r\n    getTmpPays(){\r\n        return this.tmpPays;\r\n    }\r\n    getTmpContrat(){\r\n        return this.tmpContrat;\r\n    }\r\n    getTmpRenumeration(){\r\n        return this.tmpRenumeration;\r\n    }\r\n    getTmpExperience(){\r\n        return this.tmpExperience;\r\n    }\r\n\r\n    setTmpMotCle(tmpMotCle: String){\r\n        this.tmpMotCle = tmpMotCle;\r\n    }\r\n    setTmpSecteur(tmpSecteur: String){\r\n        this.tmpSecteur = tmpSecteur;\r\n    }\r\n    setTmpPays(tmpPays: String){\r\n        this.tmpPays = tmpPays;\r\n    }\r\n    setTmpContrat(tmpContrat: String){\r\n        this.tmpContrat = tmpContrat;\r\n    }\r\n    setTmpRenumeration(tmpRenumeration: String){\r\n        this.tmpRenumeration = tmpRenumeration;\r\n    }\r\n    setTmpExperience(tmpExperience: String){\r\n        this.tmpExperience = tmpExperience;\r\n    }\r\n\r\n    truncateText (str, length, ending) {\r\n        if (length == null) {\r\n          length = 100;\r\n        }\r\n        if (ending == null) {\r\n          ending = '...';\r\n        }\r\n        if (str.length > length) {\r\n          return str.substring(0, length - ending.length) + ending;\r\n        } else {\r\n          return str;\r\n        }\r\n    };\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filtre'\r\n})\r\nexport class FiltrePipe implements PipeTransform {\r\n\r\n  \r\n\r\n  transform(emplois: any, reactifMotCle: any, reactifSecteur: any, reactifPays: any, reactifContrat: any, reactifRenumeration: any, reactifExperience: any) {\r\n   \r\n    if( emplois=== undefined || (reactifMotCle===undefined && reactifSecteur===undefined && reactifPays===undefined && reactifContrat===undefined && reactifRenumeration===undefined && reactifExperience===undefined)){\r\n      return emplois;\r\n    }\r\n    else{\r\n      return emplois.filter(item =>{\r\n        \r\n          if((item.titre===undefined && reactifMotCle)||(reactifMotCle && item.titre.toLowerCase().indexOf(reactifMotCle.toLowerCase()) === -1))\r\n          {\r\n            return false;\r\n          }\r\n          \r\n          else if((item.secteur===undefined && reactifSecteur)||(reactifSecteur && item.secteur.indexOf(reactifSecteur) === -1))\r\n          {\r\n            return false;\r\n          }\r\n\r\n          else if((item.lieu===undefined && reactifPays)||(reactifPays && item.lieu.indexOf(reactifPays) === -1))\r\n          {\r\n            return false;\r\n          }\r\n\r\n          else if((item.type_contrat===undefined && reactifContrat)||(reactifContrat && item.type_contrat.indexOf(reactifContrat) === -1))\r\n          {\r\n            return false;\r\n          }\r\n\r\n          else if((item.renumeration===undefined && reactifRenumeration)||(reactifRenumeration && item.renumeration.indexOf(reactifRenumeration) === -1))\r\n          {\r\n            return false;\r\n          }\r\n\r\n          else if((item.experience===undefined && reactifExperience)||(reactifExperience && item.experience.indexOf(reactifExperience) === -1))\r\n          {\r\n            return false;\r\n          }\r\n         \r\n          else  {return true;}\r\n        \r\n    })\r\n     \r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<footer>\\r\\n  <div class=\\\"col-md-12 col-xs-12 top-footer\\\"></div>\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"logo-footer col-md-4\\\">\\r\\n        <img src=\\\"assets/images/helloJOB-principal.png\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <div class=\\\"col-md-4 footer-col\\\">\\r\\n\\r\\n        <div class=\\\"bg-title-footer\\\">\\r\\n        </div>\\r\\n        <div class=\\\"footer-description\\\">\\r\\n          <span>\\r\\n            Hellojob.tn est le site d'emploi leader en Tunisie et en Afrique du Nord qui relie les chercheurs d'emploi aux employeurs\\r\\n            cherchant à embaucher. Les meilleurs employeurs dans la région ajoutent quotidiennement des centaines de nouveaux\\r\\n            emplois vacants sur la plateforme primée.\\r\\n          </span>\\r\\n        </div>\\r\\n        <div class=\\\"bg-title-footer titre-reseaux\\\">\\r\\n          <span class=\\\"title-footer-red\\\">suivez nous</span>\\r\\n        </div>\\r\\n        <div class=\\\"footer-follow\\\">\\r\\n          <a href=\\\"#\\\">\\r\\n            <i class=\\\"fa fa-facebook-f\\\"></i>\\r\\n          </a>\\r\\n          <a href=\\\"#\\\">\\r\\n            <i class=\\\"fa fa-twitter\\\"></i>\\r\\n          </a>\\r\\n          <a href=\\\"#\\\">\\r\\n            <i class=\\\"fa fa-google\\\"></i>\\r\\n          </a>\\r\\n          <a href=\\\"#\\\">\\r\\n            <i class=\\\"fa fa-instagram\\\"></i>\\r\\n          </a>\\r\\n          <a href=\\\"#\\\">\\r\\n            <i class=\\\"fa fa-youtube\\\"></i>\\r\\n          </a>\\r\\n          <a href=\\\"#\\\">\\r\\n            <i class=\\\"fa fa-pinterest\\\"></i>\\r\\n          </a>\\r\\n          <a href=\\\"#\\\">\\r\\n            <i class=\\\"fa fa-rss\\\"></i>\\r\\n          </a>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\" col-md-4  footer-col\\\">\\r\\n        <div class=\\\"bg-title-footer\\\">\\r\\n          <span class=\\\"title-footer-black\\\">liens rapides</span>\\r\\n        </div>\\r\\n        <ul class=\\\"menu-footer\\\">\\r\\n          <li>\\r\\n            <a href=\\\"\\\">\\r\\n              <i class=\\\"fa fa-angle-right\\\"></i>Inscription</a>\\r\\n          </li>\\r\\n\\r\\n          <li>\\r\\n            <a href=\\\"#\\\">\\r\\n              <i class=\\\"fa fa-angle-right\\\"></i>Mon espace</a>\\r\\n          </li>\\r\\n\\r\\n          <li>\\r\\n            <a href=\\\"#\\\">\\r\\n              <i class=\\\"fa fa-angle-right\\\"></i>Hello sur mobile</a>\\r\\n          </li>\\r\\n\\r\\n          <li>\\r\\n            <a href=\\\"#\\\">\\r\\n              <i class=\\\"fa fa-angle-right\\\"></i>offre à la une </a>\\r\\n          </li>\\r\\n\\r\\n          <li>\\r\\n            <a href=\\\"#\\\">\\r\\n              <i class=\\\"fa fa-angle-right\\\"></i>inscription newslettre</a>\\r\\n          </li>\\r\\n          <li>\\r\\n            <a href=\\\"#\\\">\\r\\n              <i class=\\\"fa fa-angle-right\\\"></i>Completer Votre cv</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-4  footer-col\\\">\\r\\n        <div class=\\\"container-facebook\\\">\\r\\n          <img src=\\\"assets/images/likebox.png\\\" class=\\\"img-responsive\\\" alt=\\\"\\\">\\r\\n        </div>\\r\\n        <a href=\\\"#\\\" class=\\\"to-top\\\">\\r\\n          <i class=\\\"fa fa-angle-up\\\"></i>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- row -->\\r\\n\\r\\n  </div>\\r\\n  <!-- container -->\\r\\n  <div class=\\\"row footerlink\\\">\\r\\n    <p>Copyright &copy; 2018, HELLOJOB.TN |\\r\\n      <a href=\\\"#\\\">Privacy Policy</a> |\\r\\n      <a href=\\\"#\\\">Terms & Conditions</a>\\r\\n    </p>\\r\\n  </div>\\r\\n</footer>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-findcond\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"navbar-header\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\">\\r\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n      </button>\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">\\r\\n        <img id=\\\"logo\\\" class=\\\"img-responsive\\\" src=\\\"assets/images/helloJOB-principal.png\\\">\\r\\n      </a>\\r\\n    </div>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbar\\\">\\r\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n        <li>\\r\\n          <a [routerLink]=\\\"['/emploi']\\\" class=\\\"animation\\\">No offres\\r\\n          </a>\\r\\n        </li>\\r\\n        <li class=\\\"active\\\" *ngIf=\\\"!isAuthenticated\\\">\\r\\n          <a [routerLink]=\\\"\\\" class=\\\"animation\\\" (click)=\\\"openDialog()\\\">Inscription\\r\\n            <span class=\\\"sr-only\\\">(current)</span>\\r\\n          </a>\\r\\n        </li>\\r\\n        <li class=\\\"active\\\" *ngIf=\\\"!isAuthenticated\\\">\\r\\n          <a [routerLink]=\\\"\\\" class=\\\"animation\\\" (click)=\\\"openDialogConnexion()\\\">Connexion\\r\\n            <span class=\\\"sr-only\\\">(current)</span>\\r\\n          </a>\\r\\n        </li>\\r\\n\\r\\n        <li class=\\\"active\\\" *ngIf=\\\"isAuthenticated\\\">\\r\\n          <a [routerLink]=\\\"['/compte']\\\" class=\\\"animation\\\">Mon Compte\\r\\n            <span class=\\\"sr-only\\\">(current)</span>\\r\\n          </a>\\r\\n        </li>\\r\\n\\r\\n      </ul>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { InscriptionService } from '../inscription/inscription.service';\r\n\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport { PopUpConnexion, PopUpInscription } from '../home/home.component';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  isAuthenticated = false;\r\n  authSubscription: Subscription;\r\n\r\n  constructor(private inscriptionService:InscriptionService, public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.authSubscription = this.inscriptionService.authChange.subscribe(authStatus => {\r\n      this.isAuthenticated = authStatus;\r\n    });\r\n  }\r\n\r\n  openDialogConnexion(): void {\r\n    const dialogRef = this.dialog.open(PopUpConnexion, {\r\n      width: '50%'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog connexion was closed');      \r\n    });\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(PopUpInscription, {\r\n      width: '50%'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');      \r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<div id=\\\"content\\\">\\r\\n  <div class=\\\"show\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"overlay\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n            <div class=\\\"jobtext\\\">\\r\\n              <p class=\\\"first\\\">Votre Carriére en une simple recherche</p>\\r\\n              <p class=\\\"secand\\\">Trouvez votre job en une minute</p>\\r\\n              <p class=\\\"third\\\">{{ (emplois | filtre:reactifMotCle:reactifSecteur:reactifPays:reactifContrat:reactifRenumeration:reactifExperience)?.length }} jobs disponibles</p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <form #formEmploi=\\\"ngForm\\\" class=\\\"recherche-home\\\" (ngSubmit)=\\\"onClickChercher(formEmploi)\\\">\\r\\n          <div class=\\\"row form\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n              <mat-form-field class=\\\"validate white\\\">\\r\\n                <input matInput placeholder=\\\"Mots-clé ...\\\" ngModel name=\\\"tmpMotCleInput\\\" [(ngModel)]=\\\"reactifMotCle\\\">\\r\\n              </mat-form-field>\\r\\n            </div>            \\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-select ngModel name=\\\"tmpSecteurInput\\\" placeholder=\\\"Secteur ..\\\" [(ngModel)]=\\\"reactifSecteur\\\">\\r\\n                  <mat-option [value]=\\\"undefined\\\" selected>-- Tous les secteurs --</mat-option>\\r\\n                  <mat-option [value]=\\\"secteur[0].secteur\\\" *ngFor=\\\"let secteur of secteurs\\\">{{ secteur[0].secteur }}</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-select ngModel name=\\\"tmpPaysInput\\\" placeholder=\\\"Pays ..\\\" [(ngModel)]=\\\"reactifPays\\\">\\r\\n                  <mat-option [value]=\\\"undefined\\\" selected>-- Tous les pays --</mat-option>\\r\\n                  <mat-option [value]=\\\"lieu[0].lieu\\\" *ngFor=\\\"let lieu of lieux\\\">{{ lieu[0].lieu }}</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n              <button mat-button class=\\\"btn-recherche-home\\\">\\r\\n                  Chercher <i class=\\\"fa fa-search\\\"></i>\\r\\n              </button>\\r\\n              <a href=\\\"#rechercheAvancee\\\" class=\\\"recherche-avancee\\\" data-toggle=\\\"collapse\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"rechercheAvancee\\\">Recherche avancée</a>\\r\\n              \\r\\n              \\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"collapse\\\" id=\\\"rechercheAvancee\\\">\\r\\n            <div class=\\\"well\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                  <mat-form-field>\\r\\n                    <mat-select name=\\\"tmpTypeEmploiInput\\\" placeholder=\\\"Contrat de type ..\\\" [(ngModel)]=\\\"reactifContrat\\\">\\r\\n                      <mat-option [value]=\\\"undefined\\\" selected>-- Tous les types --</mat-option>\\r\\n                      <mat-option [value]=\\\"typeEmploi[0].type_contrat\\\" *ngFor=\\\"let typeEmploi of typeEmplois\\\">{{ typeEmploi[0].type_contrat }}</mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                  <mat-form-field>\\r\\n                    <mat-select name=\\\"tmpRenumerationInput\\\" placeholder=\\\"Rémunération ..\\\" [(ngModel)]=\\\"reactifRenumeration\\\">\\r\\n                      <mat-option [value]=\\\"undefined\\\" selected>-- Toutes les rénumérations --</mat-option>\\r\\n                      <mat-option [value]=\\\"renumeration[0].renumeration\\\" *ngFor=\\\"let renumeration of renumerations\\\">{{ renumeration[0].renumeration }}</mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                  <mat-form-field>\\r\\n                    <mat-select name=\\\"tmpExperienceInput\\\" placeholder=\\\"Niveau d'expérience ..\\\" [(ngModel)]=\\\"reactifExperience\\\">\\r\\n                        <mat-option [value]=\\\"undefined\\\" selected>-- Tous les expériences --</mat-option>    \\r\\n                      <mat-option [value]=\\\"experience[0].experience\\\" *ngFor=\\\"let experience of experiences\\\">{{ experience[0].experience }}</mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- /.row -->\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n        \\r\\n      </div>\\r\\n      <div id=\\\"Carousel\\\" class=\\\"carousel slide\\\">     \\r\\n        <!-- Carousel items -->\\r\\n        <div class=\\\"carousel-inner\\\">\\r\\n          <!-- TODO gestion Item ! -->\\r\\n          <ng-container *ngFor=\\\"let item of emploisGroupedBySecteur; let i = index\\\">\\r\\n            <div class=\\\"item\\\" [ngClass]=\\\"{'active': i === 0 }\\\" *ngIf=\\\"i%4===0\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-3\\\" *ngFor=\\\"let emploiGrouped of emploisGroupedBySecteur|slice:i:i + 4; let j = index\\\">\\r\\n                  <div class=\\\"slidesilk\\\">\\r\\n                    <div class=\\\"item-slide\\\">\\r\\n                      <p class=\\\"link-item\\\">\\r\\n                        <i class=\\\"fa fa-ellipsis-h\\\"></i>\\r\\n                      </p>\\r\\n                      <p class=\\\"secteur\\\">{{ emploiGrouped[0].secteur }}</p>\\r\\n                      <p class=\\\"offre-count\\\">{{ emploiGrouped.length }} Offre</p>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <!-- slidesilk -->\\r\\n                </div>\\r\\n                <!-- col-md-3 -->\\r\\n              </div>\\r\\n            </div>\\r\\n          </ng-container>\\r\\n          \\r\\n          \\r\\n          \\r\\n        </div><!--.carousel-inner-->\\r\\n        <!--.carousel-inner-->\\r\\n        <span data-slide=\\\"prev\\\" (click)=\\\"onClickPrevC1()\\\" class=\\\"left carousel-control\\\">‹</span>\\r\\n        <span data-slide=\\\"next\\\" (click)=\\\"onClickNextC1()\\\" class=\\\"right carousel-control\\\">›</span>\\r\\n      \\r\\n      </div><!--.Carousel-->\\r\\n    </div>\\r\\n    <!-- /.container -->\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"note\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n          <p>Vous cherchez un job?\\r\\n            <span class=\\\"recherche\\\">Dites</span>\\r\\n            <span class=\\\"hello\\\">HELLO </span>\\r\\n            <span class=\\\"recherche\\\">! On s'occupe du reste !</span>\\r\\n          </p>\\r\\n          <span class=\\\"download-txt\\\">Téléchargez votre CV pour postuler facilement aux offres d'emploi</span>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2 col-xs-6\\\">\\r\\n          <button *ngIf=\\\"!isAuthenticated\\\" (click)=\\\"openDialog()\\\" class=\\\"add-cv waves-effect waves-light\\\">Ajouter votre CV</button>\\r\\n          <button *ngIf=\\\"isAuthenticated\\\" [routerLink]=\\\"['/compte']\\\" class=\\\"add-cv waves-effect waves-light\\\">Ajouter votre CV</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2 col-xs-6\\\">\\r\\n          <span class=\\\"hello-txt\\\">hello</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- /.container -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 col-xs-12\\\" id=\\\"app-box\\\">\\r\\n      <div class=\\\"col-md-6 col-xs-12 left-side\\\">\\r\\n        <div class=\\\"img-mobile\\\">\\r\\n          <img src=\\\"assets/images/mobile-app.png\\\" alt=\\\"Version Mobile\\\">\\r\\n        </div>\\r\\n        <!-- /.img-mobile -->\\r\\n        <div class=\\\"part1\\\">hello\\r\\n          <span class=\\\"job-txt\\\">job</span>\\r\\n        </div>\\r\\n        <div class=\\\"part2\\\">\\r\\n\\r\\n\\r\\n          <div class=\\\"mobileapp\\\">\\r\\n            <p>Disponible sur iOS et Android</p>\\r\\n            <img src=\\\"assets/images/playstore.svg\\\" class=\\\"playstore\\\">\\r\\n            <img src=\\\"assets/images/appstore.svg\\\" class=\\\"appstore\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"part3\\\"></div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 col-xs-12 right-side pull-right\\\">\\r\\n        <div class=\\\"titre-inscription\\\" *ngIf=\\\"!isAuthenticated\\\">\\r\\n          une simple inscription\\r\\n        </div>\\r\\n        <!-- /.titre-inscription -->\\r\\n        <div class=\\\"titre-inscription\\\" *ngIf=\\\"isAuthenticated\\\">\\r\\n          Accéder à votre compte\\r\\n        </div>\\r\\n        <!-- /.titre-inscription -->\\r\\n        <div class=\\\"text-inscription\\\" *ngIf=\\\"!isAuthenticated\\\">\\r\\n          Avec la vision d’un expert et une approche dédiée métier qui fait la différence, nous abordons les défis en ressources humaines\\r\\n          avec confiance, car notre équipe est expérimentée dans chaque secteur et chaque discipline que nous proposons.\\r\\n        </div>\\r\\n        <!-- /.text-inscription -->\\r\\n        <div class=\\\"text-inscription\\\" *ngIf=\\\"isAuthenticated\\\">\\r\\n          En complétant votre compte vous aurez plus de chance d'être consulté\\r\\n        </div>\\r\\n        <!-- /.text-inscription -->\\r\\n        \\r\\n        <div class=\\\"btn-container\\\">\\r\\n          <button mat-button class=\\\"btn-inscription bg-blanc\\\" (click)=\\\"openDialog()\\\" *ngIf=\\\"!isAuthenticated\\\">\\r\\n              Inscription\\r\\n          </button>\\r\\n          <button mat-button class=\\\"btn-inscription bg-blanc\\\" (click)=\\\"onClickCompte()\\\" *ngIf=\\\"isAuthenticated\\\">\\r\\n              Mon compte\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"clearfix\\\"></div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-12 col-xs-12\\\" id=\\\"newslettre\\\">\\r\\n      <div class=\\\"col-md-5 col-xs-12 col-md-offset-1 left-side\\\">\\r\\n        <div class=\\\"bloc-job-recent\\\">\\r\\n          <h2 class=\\\"titre-job-home\\\">JOBS récement ajoutés</h2>\\r\\n          <div class=\\\"jobs\\\" *ngIf=\\\"emplois; let emplois; else loading\\\">\\r\\n          \\r\\n            <div class=\\\"item-job\\\" *ngFor=\\\"let emploi of emplois | slice:0:4\\\">\\r\\n              <div class=\\\"container-img-offre\\\">\\r\\n                <img class=\\\"img-offre\\\" alt=\\\"nom de la société\\\" src=\\\"assets/images/jobicon.png\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"jobdetail\\\">\\r\\n                <h3 class=\\\"titre-offre\\\" *ngIf=\\\"emploi.titre\\\">{{ emploi.titre}}</h3>\\r\\n                <span class=\\\"contrat-offre\\\" *ngIf=\\\"emploi.type_contrat\\\">{{ emploi.type_contrat}}</span>\\r\\n                <span class=\\\"type-offre\\\" *ngIf=\\\"emploi.type_temp\\\">{{ emploi.type_temp}}</span>\\r\\n                <div class=\\\"clearfix\\\"></div>\\r\\n                <p class=\\\"societe-offre\\\">{{ emploi.lieu}} -\\r\\n                  <span>{{ emploi.secteur}}</span>\\r\\n                </p>\\r\\n                <!--<p class=\\\"adresse-offre\\\">16 rue tarek ibn zied menzah 5-2091</p>-->\\r\\n              </div>\\r\\n              <div class=\\\"clearfix\\\"></div>\\r\\n              <a href=\\\"#\\\" class=\\\"detail-offre\\\">+ Détails</a>\\r\\n            </div>\\r\\n          </div>\\r\\n          <ng-template #loading>Chargement Jobs&hellip;</ng-template>\\r\\n        </div>\\r\\n        <!-- /.bloc-job-recent -->\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 col-xs-12 right-side\\\">\\r\\n        <div class=\\\"newslettre-box\\\">\\r\\n          <p class=\\\"capitalize\\\">Inscrivez vous</p>\\r\\n          <p class=\\\"capitalize\\\">gratuitement</p>\\r\\n          <span class=\\\"normal\\\">à</span>\\r\\n          <span class=\\\"hello-text\\\">hello </span>\\r\\n          <span class=\\\"normal\\\">news</span>\\r\\n          <input type=\\\"text\\\" placeholder=\\\"Newslettre\\\" class=\\\"white\\\">\\r\\n          <button class=\\\"waves-effect waves-light\\\">inscription</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"clearfix\\\"></div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <!-- row -->\\r\\n \\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 col-xs-12 partner-title\\\">\\r\\n        <h3>Nos partenaires</h3>\\r\\n        \\r\\n      </div>\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div id=\\\"Carousel2\\\" class=\\\"carousel slide\\\">\\r\\n          \\r\\n          <div class=\\\"carousel-inner\\\">\\r\\n  \\r\\n            <ng-container *ngFor=\\\"let item of imgPartenaire; let i = index\\\">\\r\\n              <div class=\\\"item\\\" [ngClass]=\\\"{'active': i === 0 }\\\" *ngIf=\\\"i % 4 === 0\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-3\\\" *ngFor=\\\"let picto of imgPartenaire|slice:i:i + 4; let i1 = index\\\">\\r\\n                    <a href=\\\"#\\\" class=\\\"thumbnail\\\"><img [attr.src]=\\\"picto\\\" /></a>\\r\\n                  </div>\\r\\n                  \\r\\n                </div>\\r\\n                <!--.row-->\\r\\n              </div>\\r\\n              <!--.item-->\\r\\n            </ng-container>\\r\\n  \\r\\n          </div>\\r\\n          <!--.carousel-inner-->\\r\\n          <span data-slide=\\\"prev\\\" (click)=\\\"onClickPrevC2()\\\" class=\\\"left carousel-control\\\">‹</span>\\r\\n          <span data-slide=\\\"next\\\" (click)=\\\"onClickNextC2()\\\" class=\\\"right carousel-control\\\">›</span>\\r\\n        </div>\\r\\n        <!--.Carousel-->\\r\\n  \\r\\n      </div>\\r\\n      \\r\\n      <div class=\\\"clearfix\\\"></div>\\r\\n      <!-- /.clearfix -->\\r\\n    </div>\\r\\n    <!-- /.row -->\\r\\n  </div>\\r\\n  <!-- /.container -->\\r\\n</div>\\r\\n<!-- content -->\"","module.exports = \"\"","import { Component, OnInit, OnDestroy, Inject } from '@angular/core';\r\nimport * as $ from 'jquery';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { EmploiService } from '../emploi/emploi.service';\r\nimport { UtilisateurService } from '../utilisateur/utilisateur.service';\r\n\r\nimport { Observable, Subscription, Subject } from 'rxjs';\r\n\r\nimport 'rxjs/add/operator/map';\r\nimport { Emploi } from '../emploi/emploi.model';\r\nimport { Utilisateur } from '../utilisateur/utilisateur.model';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AngularFireStorage } from '@angular/fire/storage';\r\n\r\nexport interface DialogData {\r\n  animal: string;\r\n  name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\n\r\n\r\nexport class HomeComponent implements OnInit, OnDestroy {\r\n\r\n  emploiSubscription: Subscription;\r\n  emplois: Emploi[];\r\n  secteurs: Emploi[];\r\n  lieux: Emploi[];\r\n  typeEmplois: Emploi[];\r\n  renumerations: Emploi[];\r\n  experiences: Emploi[];\r\n  emploisGroupedBySecteur: Emploi[];\r\n  nbr_emploi = null;\r\n  utilisateurs: Utilisateur[];\r\n  \r\n  isAuthenticated = false;\r\n  authSubscription: Subscription;\r\n  \r\n  meta: Observable<any>;\r\n  //profileUrl: Observable<string | null>;\r\n  imgPartenaire: string[] = [];\r\n  imgTab: string[];\r\n  \r\n  constructor(\r\n    private emploiService: EmploiService, \r\n    private inscriptionService: InscriptionService, \r\n    private utilisateurService: UtilisateurService, \r\n    public dialog: MatDialog,\r\n    private router:Router,\r\n    private route: ActivatedRoute,\r\n    private storage: AngularFireStorage\r\n  ) {\r\n\r\n  }\r\n  \r\n  ngOnInit() {\r\n    this.emploiSubscription = this.emploiService.emploisChanged\r\n      .subscribe(emplois => {\r\n         this.emplois = emplois; \r\n         this.nbr_emploi = emplois.length;\r\n         console.log(this.emplois);\r\n         console.log(this.nbr_emploi);\r\n         this.emploisGroupedBySecteur = Object.values(this.groupBy(this.emplois, 'secteur'));\r\n         this.secteurs = Object.values(this.groupBy(this.emplois.filter(data => {\r\n            return data.secteur !== undefined \r\n          }), 'secteur')); //on filtre les enregistrement undefined avec la fonction .filter puis on applique le groupBy\r\n          this.lieux = Object.values(this.groupBy(this.emplois.filter(data => {\r\n            return data.lieu !== undefined\r\n          }), 'lieu'));\r\n          this.typeEmplois = Object.values(this.groupBy(this.emplois.filter(data => {\r\n            return data.type_contrat !== undefined\r\n          }), 'type_contrat'));\r\n          this.renumerations = Object.values(this.groupBy(this.emplois.filter(data => {\r\n            return data.renumeration !== undefined\r\n          }), 'renumeration'));\r\n          this.experiences = Object.values(this.groupBy(this.emplois.filter(data => {\r\n            return data.experience !== undefined\r\n          }), 'experience'));\r\n         \r\n        });\r\n    this.emploiService.getEmplois();\r\n\r\n    jQuery('#Carousel').carousel();\r\n    jQuery('#Carousel2').carousel({\r\n        interval: 5000\r\n    })\r\n    \r\n    /*initialisation du status de connexion*/\r\n    this.isAuthenticated = this.inscriptionService.isAuth();\r\n    this.authSubscription = this.inscriptionService.authChange.subscribe(authStatus => {\r\n      this.isAuthenticated = authStatus; \r\n      console.log(\"Bien connecté ! 3\")\r\n    });\r\n\r\n    this.utilisateurService.utilisateursChanged.subscribe(datas => {\r\n      this.imgPartenaire = [];\r\n      this.imgTab = datas.map(function(value, index, array){ //Retourner les non null\r\n        if (value.image!==undefined && value.type===\"super partenaire\") {\r\n          return value.image\r\n        }\r\n      });\r\n      \r\n      this.imgTab.forEach(imageRetournee=>{\r\n        if(imageRetournee!==undefined){\r\n          const ref = this.storage.ref('utilisateurs/'+imageRetournee);\r\n          ref.getDownloadURL().subscribe(data =>{\r\n            console.log(\"bon bon\")\r\n            console.log(data)\r\n            this.imgPartenaire.push(data)\r\n          });\r\n        }\r\n        else return \"false\";\r\n      })\r\n      console.log(\"obs image >> \");\r\n      console.log(this.imgPartenaire);\r\n\r\n    });\r\n    this.utilisateurService.getUtilisateurs();\r\n\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(PopUpInscription, {\r\n      width: '51%'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');      \r\n    });\r\n  }\r\n\r\n  openDialogConnexion(): void {\r\n    const dialogRef = this.dialog.open(PopUpConnexion, {\r\n      width: '50%'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog connexion was closed');      \r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.emploiSubscription.unsubscribe();\r\n  }\r\n  groupBy (xs, key) {\r\n    return xs.reduce(function(rv, x) {\r\n      (rv[x[key]] = rv[x[key]] || []).push(x);\r\n      return rv;\r\n    }, {});\r\n  };\r\n  selected = '';\r\n\r\n  onClickChercher(form: NgForm) {\r\n    this.emploiService.setTmpMotCle(form.value.tmpMotCleInput?form.value.tmpMotCleInput:undefined);\r\n    this.emploiService.setTmpSecteur(form.value.tmpSecteurInput?form.value.tmpSecteurInput:undefined);\r\n    this.emploiService.setTmpPays(form.value.tmpPaysInput?form.value.tmpPaysInput:undefined);\r\n    this.emploiService.setTmpContrat(form.value.tmpTypeEmploiInput?form.value.tmpTypeEmploiInput:undefined);\r\n    this.emploiService.setTmpRenumeration(form.value.tmpRenumerationInput?form.value.tmpRenumerationInput:undefined);\r\n    this.emploiService.setTmpExperience(form.value.tmpExperienceInput?form.value.tmpExperienceInput:undefined);\r\n    this.router.navigate(['emploi'], {relativeTo: this.route});\r\n  }\r\n\r\n  onClickPrevC1(){\r\n    jQuery('#Carousel').carousel('prev');\r\n  }\r\n\r\n  onClickNextC1(){\r\n    jQuery('#Carousel').carousel('next');\r\n  }\r\n\r\n  onClickPrevC2(){\r\n    jQuery('#Carousel2').carousel('prev');\r\n  }\r\n\r\n  onClickNextC2(){\r\n    jQuery('#Carousel2').carousel('next');\r\n  }\r\n\r\n  onClickCompte(){\r\n    this.router.navigate(['compte'], {relativeTo: this.route});\r\n  }\r\n\r\n}\r\n\r\n\r\n/***************** INSCRIPTION POP-UP *********************/\r\n\r\n\r\n\r\nimport { InscriptionService } from '../inscription/inscription.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { NotificationComponent } from '../notification/notification.component';\r\n\r\n\r\n@Component({\r\n  selector: 'pop-up-inscription',\r\n  templateUrl: 'pop-up-inscription.html',\r\n})\r\nexport class PopUpInscription {\r\n\r\n  isAuthenticated = false;\r\n  authSubscription: Subscription;\r\n  errorStatus : string;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<PopUpInscription>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData, \r\n    private inscriptionService: InscriptionService,\r\n    public snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authSubscription = this.inscriptionService.authChange.subscribe(authStatus => {\r\n      this.isAuthenticated = authStatus;\r\n      console.log(authStatus)\r\n      this.onNoClick();\r\n      if(this.isAuthenticated){\r\n        this.snackBar.open(\"Inscription réussite\", \"\", {\r\n          duration: 5000,\r\n        });\r\n      }\r\n    });\r\n    this.inscriptionService.errorChange.subscribe(errorStatus => {\r\n      this.errorStatus = errorStatus;\r\n      \r\n        this.snackBar.open(this.translateMessage(this.errorStatus), \"\", {\r\n          duration: 5000,\r\n        });\r\n      \r\n    });\r\n  }\r\n  \r\n  translateMessage(message: string){\r\n    switch (message){\r\n        case 'auth/email-already-in-use': { \r\n            return \"Email déja utilisé\";\r\n            break; \r\n        } \r\n        default: { \r\n            //statements; \r\n            break; \r\n      } \r\n    }\r\n  \r\n  }\r\n  onSubmitInscription(form: NgForm) {\r\n    this.inscriptionService.inscriptionUtilisateur(\r\n      form.value.nom_utilisateur,\r\n      form.value.email,\r\n      form.value.password\r\n    );\r\n    \r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n/***************** CONNEXION POP-UP *********************/\r\n\r\n\r\n@Component({\r\n  selector: 'pop-up-connexion',\r\n  templateUrl: 'pop-up-connexion.html',\r\n})\r\nexport class PopUpConnexion {\r\n\r\n  isAuthenticated = false;\r\n  authSubscription: Subscription;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<PopUpConnexion>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData, private inscriptionService: InscriptionService,\r\n    public snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authSubscription = this.inscriptionService.authChange.subscribe(authStatus => {\r\n      this.isAuthenticated = authStatus;\r\n      console.log(\"Bien connecté ! 2\")\r\n      if(this.isAuthenticated){\r\n        this.onNoClick();\r\n        this.snackBar.open(\"Vous êtes connecté\", \"\", {\r\n          duration: 5000,\r\n        });\r\n      }else{\r\n        this.snackBar.open(\"Vous êtes pas connecté !\", \"\", {\r\n          duration: 5000,\r\n        });\r\n      }\r\n      \r\n    });\r\n  }\r\n\r\n  onSubmitConnexion(form: NgForm) {\r\n    this.inscriptionService.connexionUtilisateur(\r\n      form.value.email,\r\n      form.value.password\r\n    );\r\n  }\r\n\r\n}","module.exports = \"<form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitConnexion(f)\\\">\\r\\n    <div mat-dialog-content class=\\\"pop-up\\\">\\r\\n        <div class=\\\"\\\">\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"row form\\\">\\r\\n                    <div class=\\\"col-sm-6 col-sm-push-3\\\">\\r\\n                        <div class=\\\"titre-recherche cnx\\\">\\r\\n                            Connexion\\r\\n                        </div>\\r\\n                        <!-- /.titre-recherche -->\\r\\n\\r\\n                        <mat-form-field>\\r\\n                            <input matInput ngModel placeholder=\\\"Email\\\" name=\\\"email\\\" email required #emailFormControl=\\\"ngModel\\\">\\r\\n                            <mat-error *ngIf=\\\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\\\">\\r\\n                                Veuillez entrer une adresse email valide !\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\r\\n                                Email est <strong>Obligatoire</strong>\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                        <!-- /.input-field -->\\r\\n                        <mat-form-field>\\r\\n                            <input type=\\\"password\\\" matInput placeholder=\\\"Your password\\\" ngModel name=\\\"password\\\"\\r\\n                                required>\\r\\n                        </mat-form-field>\\r\\n                        <!-- /.input-field -->\\r\\n\\r\\n                    </div>\\r\\n                    <!-- /.col-sm-6 col-sm-push-3 -->\\r\\n                </div>\\r\\n                <!-- /.row -->\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row pop-up-footer\\\">\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n            <button mat-button (click)=\\\"onNoClick()\\\" class=\\\"btn bg-rouge color-blanc\\\">Fermer</button>\\r\\n        </div>\\r\\n        <!-- /.col-sm-6 -->\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n            <button mat-button style=\\\"float: right\\\" class=\\\"bg-rouge color-blanc\\\">\\r\\n                Connexion\\r\\n            </button>\\r\\n        </div>\\r\\n        <!-- /.col-sm-6 -->\\r\\n    </div>\\r\\n    <!-- /.row -->\\r\\n\\r\\n\\r\\n</form>\"","module.exports = \"<form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitInscription(f)\\\">\\r\\n    <div mat-dialog-content class=\\\"pop-up\\\">\\r\\n        <div class=\\\"\\\">\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"row form\\\">\\r\\n                    <div class=\\\"col-sm-6 col-sm-push-3\\\">\\r\\n                        <div class=\\\"titre-recherche cnx\\\">\\r\\n                            Inscription Rapide\\r\\n                        </div>\\r\\n                        <!-- /.titre-recherche -->\\r\\n\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Nom d'utilisateur\\\" ngModel name=\\\"nom_utilisateur\\\" required>\\r\\n                        </mat-form-field>\\r\\n                        <!-- /.input-field -->\\r\\n                        <mat-form-field>\\r\\n                            <input matInput ngModel placeholder=\\\"Email\\\" name=\\\"email\\\" email required #emailFormControl=\\\"ngModel\\\">\\r\\n                            <mat-error *ngIf=\\\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\\\">\\r\\n                                Veuillez entrer une adresse email valide !\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\r\\n                                Email est <strong>Obligatoire</strong>\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                        <!-- /.input-field -->\\r\\n                        <mat-form-field hintLabel=\\\"6 charactères au minimum\\\">\\r\\n                            <input type=\\\"password\\\" matInput placeholder=\\\"Your password\\\" ngModel name=\\\"password\\\"\\r\\n                                required minlength=\\\"6\\\" #pwInput=\\\"ngModel\\\">\\r\\n                            <mat-hint align=\\\"end\\\">{{ pwInput.value?.length }} / 6</mat-hint>\\r\\n                            <mat-error>Au minimum 6 charactères</mat-error>\\r\\n                        </mat-form-field>\\r\\n                        <!-- /.input-field -->\\r\\n\\r\\n\\r\\n                        <!-- /.bloc-connexion -->\\r\\n\\r\\n                    </div>\\r\\n                    <!-- /.col-sm-6 col-sm-push-3 -->\\r\\n                </div>\\r\\n                <!-- /.row -->\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row pop-up-footer\\\">\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n            <button mat-button (click)=\\\"onNoClick()\\\" class=\\\"btn bg-rouge color-blanc\\\">Fermer</button>\\r\\n        </div>\\r\\n        <!-- /.col-sm-6 -->\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n            <button mat-button style=\\\"float: right\\\" class=\\\"bg-rouge color-blanc\\\">\\r\\n                Inscription\\r\\n            </button>\\r\\n        </div>\\r\\n        <!-- /.col-sm-6 -->\\r\\n    </div>\\r\\n    <!-- /.row -->\\r\\n</form>\"","module.exports = \"<p>\\r\\n  inscription works!\\r\\n</p>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-inscription',\r\n  templateUrl: './inscription.component.html',\r\n  styleUrls: ['./inscription.component.scss']\r\n})\r\nexport class InscriptionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import 'rxjs/add/operator/map';\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\n\r\nimport { Utilisateur } from '../utilisateur/utilisateur.model';\r\nimport { UtilisateurService } from '../utilisateur/utilisateur.service'\r\n\r\n\r\n/*interface Post {\r\n  title: string;\r\n  content: string;\r\n}*/\r\n\r\n@Injectable()\r\nexport class InscriptionService{\r\n    isAuthenticated = false;\r\n    authChange = new Subject<boolean>();\r\n    errorChange = new Subject<string>();\r\n\r\n    constructor(private afAuth: AngularFireAuth, private utilisateurService:UtilisateurService) {\r\n    }\r\n\r\n    \r\n    inscriptionUtilisateur(nom_utilisateur: any, email: any, password: any){\r\n        this.afAuth.auth.createUserWithEmailAndPassword(email, password)\r\n        .then(\r\n            result =>{\r\n                console.log(result.user.uid);\r\n                this.isAuthenticated = true;\r\n                this.authChange.next(true);\r\n                this.utilisateurService.creerUtilisateur(nom_utilisateur, email, result.user.uid)\r\n                \r\n            }\r\n        )\r\n        .catch(\r\n            error =>{\r\n                console.log(error);\r\n                this.errorChange.next(error.code);\r\n            }\r\n        );\r\n    }/*test*/\r\n\r\n    connexionUtilisateur(email: any, password: any){\r\n        this.afAuth.auth.signInWithEmailAndPassword(email, password)\r\n        .then(\r\n            result => {\r\n                console.log(result.user.uid);\r\n                this.isAuthenticated = true;\r\n                this.authChange.next(true);\r\n                console.log(\"Bien connecté !\")\r\n                this.utilisateurService.connecterUtilisateur(result.user.uid)\r\n            }\r\n        )\r\n        .catch(\r\n            error =>{\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    deconnexionUtilisateur(){\r\n        this.afAuth.auth.signOut().then(\r\n            result =>{\r\n                console.log(\"deconnexion\");\r\n                this.isAuthenticated = false;\r\n                this.authChange.next(false);\r\n            }\r\n        )\r\n        .catch(\r\n            error =>{\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    changerMotPasseUtilisateur(email: any, oldPassword: any, newPassword: any){\r\n        return this.afAuth.auth.signInWithEmailAndPassword(email, oldPassword)\r\n    }\r\n\r\n    updateUtilisateurCourant(result){\r\n        this.afAuth.auth.updateCurrentUser(result)\r\n    }\r\n    isAuth() {\r\n        return this.isAuthenticated;\r\n    }\r\n\r\n    \r\n\r\n    \r\n}","module.exports = \"<p>\\r\\n  Inscription Réussite\\r\\n</p>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.scss']\r\n})\r\nexport class NotificationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { AngularFirestore } from '@angular/fire/firestore';\r\n\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\n\r\n@Injectable()\r\nexport class DataExchangeService{\r\n\r\n    constructor(private afs: AngularFirestore, private afAuth: AngularFireAuth) {\r\n    }\r\n\r\n    \r\n\r\n    \r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"bloc-option-profil\\\">\\r\\n  <div class=\\\"titre-option-profil souligne\\\">\\r\\n    &Eacute;ducation\\r\\n  </div>\\r\\n  <!-- /.titre-option-profil -->\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"educations?.length > 0\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <table class=\\\"highlight\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th mat-sort-header=\\\"titre\\\">Titre</th>\\r\\n            <th mat-sort-header=\\\"nom_ecole\\\">Nom de l'école</th>\\r\\n            <th mat-sort-header=\\\"date_debut\\\">Date début</th>\\r\\n            <th mat-sort-header=\\\"date_fin\\\">Date fin</th>\\r\\n            <th>Description</th>\\r\\n            <th>Actions</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let education of sortedEducations; let i = index\\\">\\r\\n            <td>{{education?.titre}}</td>\\r\\n            <td>{{education?.nom_ecole}}</td>\\r\\n            <td><span *ngIf=\\\"education.date_debut, else aucuneDate;\\\">{{education?.date_debut | date:'dd/MM/yyyy'}}</span><ng-template #aucuneDate>-</ng-template> </td>\\r\\n            <td><span *ngIf=\\\"education.date_debut, else aucuneDate;\\\">{{education?.date_fin | date:'dd/MM/yyyy'}}  </span><ng-template #aucuneDate>-</ng-template> </td>\\r\\n            <td>{{education?.description}}</td>\\r\\n            <td class=\\\"action\\\"> \\r\\n              <i class=\\\"material-icons \\\" [attr.aria-expanded]=\\\"!isCollapsed\\\" (click)=\\\"onClickModifierEducation(education.$key)\\\">create</i>            \\r\\n              <i class=\\\"material-icons \\\" (click)=\\\"onClickSupprimerEducation(education.$key)\\\">delete</i>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <!-- /.col-sm-12 -->\\r\\n  </div>\\r\\n  <!-- /.row -->\\r\\n  <br>\\r\\n  <div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"txt-infos-profil\\\">\\r\\n          Ajoutez vos qualifications acquises, y compris les certificats ou les diplômes que vous pourriez avoir.\\r\\n        </div>\\r\\n        <!-- /.txt-infos-profil -->\\r\\n      </div>\\r\\n      <!-- /.col-sm-6 -->\\r\\n    </div>\\r\\n    <!-- /.row -->\\r\\n    <div id=\\\"ajouterEducation\\\" class=\\\"collapse\\\"  [ngbCollapse]=\\\"!isCollapsed\\\">\\r\\n      <div class=\\\"well\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n            <mat-form-field class=\\\"large\\\">\\r\\n              <input matInput placeholder=\\\"Titre\\\" name=\\\"titre\\\" (keyup)=\\\"onChangeInput($event)\\\" [ngModel]=\\\"(educationAModifier | async)?.titre\\\" required #titreFormControl=\\\"ngModel\\\">\\r\\n              \\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <!-- /.col-sm-4 -->\\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n            <mat-form-field class=\\\"large\\\">\\r\\n              <input matInput placeholder=\\\"Nom de l’école\\\" name=\\\"nom_ecole\\\" (keyup)=\\\"onChangeInput($event)\\\" [ngModel]=\\\"(educationAModifier | async)?.nom_ecole\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <!-- /.col-sm-4 -->\\r\\n          <div class=\\\"col-sm-2\\\">\\r\\n            <mat-form-field class=\\\"large\\\">\\r\\n              <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Date début\\\" name=\\\"date_debut\\\" (dateInput)=\\\"onChangeInput($event)\\\" [ngModel]=\\\"(educationAModifier | async)?.date_debut\\\">\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #picker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <!-- /.col-sm-2 -->\\r\\n          <div class=\\\"col-sm-2\\\">\\r\\n            <mat-form-field class=\\\"large\\\">\\r\\n              <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Date fin\\\" name=\\\"date_fin\\\" (dateInput)=\\\"onChangeInput($event)\\\" [ngModel]=\\\"(educationAModifier | async)?.date_fin\\\">\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #picker2></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <!-- /.col-sm-2 -->\\r\\n        </div>\\r\\n        <!-- /.row -->\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-12\\\">\\r\\n            <mat-form-field class=\\\"large\\\">\\r\\n              <textarea matInput placeholder=\\\"Ajouter une petite description\\\" name=\\\"description\\\" (keyup)=\\\"onChangeInput($event)\\\" [ngModel]=\\\"(educationAModifier | async)?.description\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <!-- /.col-sm-12 -->\\r\\n        </div>\\r\\n        <!-- /.row -->\\r\\n      </div>\\r\\n      <!-- /.well -->\\r\\n      \\r\\n    </div>\\r\\n    <!-- /#ajouterEducation -->\\r\\n    \\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-6 col-sm-2\\\" *ngIf=\\\"!boutonModifier\\\">\\r\\n        <button *ngIf=\\\"!etatChange\\\" class=\\\"waves-effect waves-light btn large\\\"     [attr.aria-expanded]=\\\"!isCollapsed\\\" (click)=\\\"onClickAjouter()\\\" type=\\\"button\\\" >ajouter</button>\\r\\n        <button *ngIf=\\\"etatChange\\\"  class=\\\"waves-effect waves-light btn large\\\"     (click)=\\\"onClickEnregistrerEducation()\\\" type=\\\"button\\\" >Enregistrer</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-xs-6 col-sm-2\\\" *ngIf=\\\"boutonModifier\\\">\\r\\n        <button *ngIf=\\\"!etatChange\\\" class=\\\"waves-effect waves-light btn large\\\"     type=\\\"button\\\">Modifier</button>\\r\\n        <button *ngIf=\\\"etatChange\\\"  class=\\\"waves-effect waves-light btn large\\\"     (click)=\\\"onClickEnregistrerModifEducation()\\\" type=\\\"button\\\">Enregistrer</button>\\r\\n      </div>\\r\\n      <!-- /.col-xs-6 col-sm-2 -->\\r\\n      <div class=\\\"col-xs-6 col-sm-2\\\" *ngIf=\\\"etatOuvert && !etatchange\\\">\\r\\n        <button class=\\\"waves-effect waves-light btn large btn-white\\\" type=\\\"button\\\" (click)=\\\"onClickFermer()\\\" >Fermer</button>\\r\\n      </div>\\r\\n      <!-- /.col-xs-6 col-sm-2 -->\\r\\n      <div class=\\\"col-xs-6 col-sm-2\\\" *ngIf=\\\"etatChange\\\">\\r\\n        <button class=\\\"waves-effect waves-light btn large btn-white\\\" type=\\\"button\\\" (click)=\\\"onClickAnnuler()\\\">Annuler</button>\\r\\n      </div>\\r\\n      <!-- /.col-xs-6 col-sm-2 -->\\r\\n    </div>\\r\\n    <!-- /.row -->\\r\\n  </div>\\r\\n</div>\\r\\n<!-- /.bloc-option-profil -->\"","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { EducationService } from './education.service'\r\nimport { Education } from './education.model';\r\nimport { ControlContainer, NgForm, FormGroup } from '@angular/forms';\r\nimport { MatDatepickerIntl, MAT_DATE_LOCALE, DateAdapter, MAT_DATE_FORMATS, MatSnackBarConfig, MatSnackBar } from '@angular/material';\r\nimport * as $ from 'jquery';\r\nimport { Observable } from 'rxjs';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, Sort } from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'app-education',\r\n  templateUrl: './education.component.html',\r\n  styleUrls: ['./education.component.css'],\r\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ],\r\n  providers: [\r\n    {provide: MAT_DATE_LOCALE, useValue: 'fr-FR'},\r\n  ],\r\n})\r\nexport class EducationComponent extends MatDatepickerIntl implements OnInit {\r\n  @Input() keyUtilisateur: any;\r\n  @Input('groupFormEducation') formEducation: FormGroup;\r\n  \r\n  test: string = \"titre de test\"\r\n  inputTitre: string;\r\n  educations: Education[];\r\n  educations2: Education[];\r\n  tmpEducation: Education = new Education(\"\", \"\", undefined, undefined, \"\");\r\n  educationAModifier: Observable<Education>;\r\n  tmpNouvelleEducationModifie: Education;\r\n  etatChange: boolean = false;\r\n  etatOuvert: boolean = false;\r\n  config = new MatSnackBarConfig();\r\n  boutonModifier: boolean = false;\r\n  docEducationIdCourant: any;\r\n  isCollapsed = false;\r\n  sortedEducations: Education[];\r\n  \r\n\r\n  constructor(private educationService: EducationService, private adapter: DateAdapter<any>, public snackBar: MatSnackBar, public dialog: MatDialog) { \r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.adapter.setLocale('fr');\r\n    this.educationService.educationsChanged.subscribe( datas => {\r\n      this.educations = datas;\r\n      //this.educations.reverse();\r\n      console.log(this.educations);\r\n      this.sortedEducations = this.educations.slice();\r\n    })    \r\n    this.educationService.getEducations(this.keyUtilisateur);\r\n    this.config.duration = 5000;\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    const data = this.educations.slice();\r\n    if (!sort.active || sort.direction === '') {\r\n      this.sortedEducations = data;\r\n      return;\r\n    }\r\n\r\n    this.sortedEducations = data.sort((a, b) => {\r\n      const isDesc = sort.direction === 'desc';\r\n      switch (sort.active) {\r\n        case 'titre': return this.compare(a.titre, b.titre, isDesc);\r\n        case 'nom_ecole': return this.compare(a.nom_ecole, b.nom_ecole, isDesc);\r\n        case 'description': return this.compare(a.description, b.description, isDesc);\r\n        case 'date_debut': return this.compare(a.date_debut, b.date_debut, isDesc);\r\n        case 'date_fin': return this.compare(a.date_fin, b.date_fin, isDesc);\r\n        default: return 0;\r\n      }\r\n    });\r\n    console.log(this.sortedEducations);\r\n  }\r\n\r\n  compare(a: number | Date | string, b: number | string | Date, isAsc: boolean) {\r\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n  }\r\n\r\n  resetForms(){\r\n    this.formEducation.controls['titre'].setValue(null)\r\n    this.formEducation.controls['nom_ecole'].setValue(null)\r\n    this.formEducation.controls['date_debut'].setValue(null)\r\n    this.formEducation.controls['date_fin'].setValue(null)\r\n    this.formEducation.controls['description'].setValue(null)\r\n  }\r\n\r\n  onChangeInput(event){\r\n    this.etatChange = true;\r\n    this.etatOuvert = false;\r\n  }\r\n\r\n  afficherNotification(message: string, couleur: string){\r\n    this.config.panelClass = [couleur];\r\n    this.snackBar.open(message, undefined, this.config);\r\n  }\r\n\r\n  AjouterEducation(){\r\n    this.educationService.ajouterEducation(this.keyUtilisateur, this.tmpEducation).then(\r\n        result => {\r\n            this.afficherNotification('Ajouté', 'background-verte');\r\n            this.etatChange = false;\r\n            this.resetForms();\r\n        }\r\n    )\r\n    .catch(\r\n        error =>{\r\n            this.afficherNotification('Ajout non réussi', 'background-rouge');\r\n        }\r\n    );\r\n  }\r\n\r\n  onClickEnregistrerEducation(){\r\n    \r\n    this.tmpEducation.titre = this.formEducation.controls['titre'].value;\r\n    this.tmpEducation.nom_ecole = this.formEducation.controls['nom_ecole'].value;\r\n    this.tmpEducation.date_debut = this.formEducation.controls['date_debut'].value?new Date(this.formEducation.controls['date_debut'].value):undefined;\r\n    this.tmpEducation.date_fin =   this.formEducation.controls['date_fin'].value?new Date(this.formEducation.controls['date_fin'].value):undefined;\r\n    this.tmpEducation.description = this.formEducation.controls['description'].value;\r\n    this.isCollapsed = false;\r\n    \r\n    if(this.tmpEducation.date_debut < this.tmpEducation.date_fin){\r\n      this.AjouterEducation();\r\n    }\r\n    else{\r\n      this.afficherNotification('La date de fin doit être suppérieure à la date de début', 'background-rouge');\r\n      this.onClickAnnuler();\r\n    }\r\n    \r\n  }\r\n\r\n  onClickSupprimerEducation(docEducationId: any){\r\n\r\n    this.educationService.supprimerEducation(this.keyUtilisateur, docEducationId).then(\r\n        result => {\r\n            this.afficherNotification('Supprimé', 'background-verte');\r\n            this.etatChange = false;\r\n            this.resetForms();\r\n        }\r\n    )\r\n    .catch(\r\n        error =>{\r\n            this.afficherNotification('Suppression non réussite', 'background-rouge');\r\n        }\r\n    );\r\n  }\r\n\r\n  onClickEnregistrerModifEducation() {\r\n    if (new Date(this.formEducation.controls['date_debut'].value) < new Date(this.formEducation.controls['date_fin'].value)) {\r\n      this.educationService.modifierEducation(this.keyUtilisateur, this.docEducationIdCourant, this.getEducationAModifier()).then(\r\n        result => {\r\n          this.afficherNotification('Modifié', 'background-verte');\r\n          this.boutonModifier = false;\r\n          this.etatChange = false;\r\n          this.isCollapsed = false;\r\n          this.resetForms();\r\n        }\r\n      )\r\n        .catch(\r\n          error => {\r\n            this.afficherNotification('Modification non réussite', 'background-rouge');\r\n          }\r\n        );\r\n    } else {\r\n      this.afficherNotification('La date de fin doit être suppérieure à la date de début', 'background-rouge');\r\n      this.onClickAnnuler();\r\n    }\r\n\r\n  }\r\n\r\n  getEducationAModifier(){\r\n    this.tmpNouvelleEducationModifie.titre = this.formEducation.controls['titre'].value;\r\n    this.tmpNouvelleEducationModifie.nom_ecole = this.formEducation.controls['nom_ecole'].value;\r\n    this.tmpNouvelleEducationModifie.date_debut = this.formEducation.controls['date_debut'].value?new Date(this.formEducation.controls['date_debut'].value):undefined;\r\n    this.tmpNouvelleEducationModifie.date_fin =   this.formEducation.controls['date_fin'].value?new Date(this.formEducation.controls['date_fin'].value):undefined;\r\n    this.tmpNouvelleEducationModifie.description = this.formEducation.controls['description'].value;\r\n    console.log(this.tmpNouvelleEducationModifie)\r\n    return this.tmpNouvelleEducationModifie;\r\n  }\r\n\r\n  onClickModifierEducation(docEducationId: any){\r\n    this.boutonModifier = true;\r\n    this.etatOuvert = true;\r\n    this.docEducationIdCourant = docEducationId;\r\n    this.isCollapsed = true;\r\n    this.educationAModifier = this.educationService.getEducation(this.keyUtilisateur, docEducationId);\r\n    this.educationAModifier.subscribe(datas =>{\r\n      this.tmpNouvelleEducationModifie = datas;\r\n    })\r\n  }\r\n\r\n  onClickAnnuler(){\r\n    this.etatOuvert = false;\r\n    this.boutonModifier = false;\r\n    this.etatChange = false;\r\n    this.isCollapsed = false;\r\n    this.resetForms();\r\n  }\r\n\r\n  onClickFermer(){\r\n    this.etatOuvert = false;\r\n    this.boutonModifier = false;\r\n    this.etatChange = false;\r\n    this.isCollapsed = false;\r\n    this.resetForms();\r\n  }\r\n\r\n  onClickAjouter(){\r\n    this.etatOuvert = true;\r\n    this.isCollapsed = true\r\n  }\r\n  \r\n  onClickModifier(){\r\n    this.etatOuvert = true;\r\n    this.isCollapsed = true;\r\n  }\r\n}\r\n\r\n\r\n","export class Education {\r\n    public titre: string;\r\n    public nom_ecole: string;\r\n    public date_debut: Date;\r\n    public date_fin: Date;\r\n    public description: string;\r\n  \r\n    constructor(\r\n    titre: string, nom_ecole: string, date_debut: Date, date_fin: Date, description: string) {\r\n    this.titre = titre;\r\n    this.nom_ecole = nom_ecole;\r\n    this.date_debut = date_debut;\r\n    this.date_fin = date_fin;\r\n    this.description = description;\r\n    }\r\n  } \r\n  ","import { AngularFirestore } from '@angular/fire/firestore';\r\nimport 'rxjs/add/operator/map';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject, BehaviorSubject, Observable } from 'rxjs';\r\nimport { Education } from './education.model';\r\nimport { Utilisateur } from '../utilisateur.model';\r\n\r\n\r\n@Injectable()\r\nexport class EducationService{\r\n    \r\n    constructor(private afs: AngularFirestore) {\r\n    }\r\n    educationsLocalTmp : Education[];\r\n    educationsChanged = new Subject<Education[]>();\r\n    educationLocalTmp : Education[];\r\n    educationChanged = new Subject<Education[]>();\r\n\r\n    getEducations(docUtilisateurId: any){\r\n        return this.afs.collection<any>('utilisateurs').doc(docUtilisateurId).collection('educations', ref => ref.orderBy('date_fin'))\r\n        .snapshotChanges()\r\n            .map(actions => {\r\n                return actions.map(action => ({ \r\n                    $key: action.payload.doc.id,\r\n                    date_debut: action.payload.doc.data().date_debut,\r\n                    date_fin:   action.payload.doc.data().date_fin,\r\n                    ...action.payload.doc.data()\r\n                }));\r\n            })\r\n            .subscribe(\r\n                (response: any[]) => {\r\n                    this.educationsLocalTmp = response;\r\n                    this.educationsChanged.next([...this.educationsLocalTmp]); // spread operator to create a copy\r\n                }\r\n            );\r\n    }\r\n\r\n    getEducation(docUtilisateurId: any, docEducationId: any) : Observable<Education>{\r\n        return this.afs.collection<Utilisateur>('utilisateurs').doc(docUtilisateurId).collection<Education>('educations').doc<Education>(docEducationId).valueChanges();\r\n    }\r\n    \r\n    ajouterEducation(docUtilisateurId: any, education: Education){\r\n        let educationJSON = JSON.parse(JSON.stringify(education))\r\n        return this.afs.collection<Utilisateur>('utilisateurs').doc(docUtilisateurId).collection<Education>('educations').add(educationJSON);\r\n        \r\n    }\r\n\r\n    supprimerEducation(docUtilisateurId: any, docEducationId: any){\r\n        return this.afs.collection<Utilisateur>('utilisateurs').doc(docUtilisateurId).collection<Education>('educations').doc(docEducationId).delete();\r\n    }\r\n\r\n    modifierEducation(docUtilisateurId: any, docEducationId: any, education: Education){\r\n        let educationJSON = JSON.parse(JSON.stringify(education))\r\n        return this.afs.collection('utilisateurs').doc(docUtilisateurId).collection('educations').doc(docEducationId).update(educationJSON);\r\n    }\r\n\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"bloc-option-profil\\\">\\r\\n  <div class=\\\"titre-option-profil souligne\\\">\\r\\n    Expérience\\r\\n  </div>\\r\\n  <!-- /.titre-option-profil -->\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"experiences?.length > 0\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <table class=\\\"highlight\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Titre</th>\\r\\n            <th>Nom de la société</th>\\r\\n            <th>Date début</th>\\r\\n            <th>Date fin</th>\\r\\n            <th>Description</th>\\r\\n            <th>Actions</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let experience of experiences; let i = index\\\">\\r\\n            <td>{{experience?.titre}}</td>\\r\\n            <td>{{experience?.nom_societe}}</td>\\r\\n            <td><span *ngIf=\\\"experience.date_debut, else aucuneDate;\\\">{{experience?.date_debut | date:'dd/MM/yyyy'}}</span><ng-template #aucuneDate>-</ng-template> </td>\\r\\n            <td><span *ngIf=\\\"experience.date_debut, else aucuneDate;\\\">{{experience?.date_fin | date:'dd/MM/yyyy'}}  </span><ng-template #aucuneDate>-</ng-template> </td>\\r\\n            <td>{{experience?.description}}</td>\\r\\n            <td class=\\\"action\\\">\\r\\n              <i class=\\\"material-icons \\\" [attr.aria-expanded]=\\\"!isCollapsed\\\" (click)=\\\"onClickModifierExperience(experience.$key)\\\">create</i>            \\r\\n              <i class=\\\"material-icons \\\" (click)=\\\"onClickSupprimerExperience(experience.$key)\\\">delete</i>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <!-- /.col-sm-12 -->\\r\\n  </div>\\r\\n  <!-- /.row -->\\r\\n  <br>\\r\\n  <div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"txt-infos-profil\\\">\\r\\n          Listez tous vos postes précédents ici. Montrez aux employeurs votre expérience.\\r\\n        </div>\\r\\n        <!-- /.txt-infos-profil -->\\r\\n      </div>\\r\\n      <!-- /.col-sm-6 -->\\r\\n    </div>\\r\\n    <!-- /.row -->\\r\\n    <div id=\\\"ajouterExperience\\\" class=\\\"collapse\\\" [ngbCollapse]=\\\"!isCollapsed\\\">\\r\\n      <div class=\\\"well\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n            <mat-form-field class=\\\"large\\\">\\r\\n              <input matInput placeholder=\\\"Titre\\\" name=\\\"titreExperience\\\" (keyup)=\\\"onChangeInput($event)\\\" [ngModel]=\\\"(experienceAModifier | async)?.titre\\\" required >\\r\\n              \\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <!-- /.col-sm-4 -->\\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n            <mat-form-field class=\\\"large\\\">\\r\\n              <input matInput placeholder=\\\"Nom de la société\\\" name=\\\"nom_societeExperience\\\" (keyup)=\\\"onChangeInput($event)\\\" [ngModel]=\\\"(experienceAModifier | async)?.nom_societe\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <!-- /.col-sm-4 -->\\r\\n          <div class=\\\"col-sm-2\\\">\\r\\n            <mat-form-field class=\\\"large\\\">\\r\\n              <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Date début\\\" name=\\\"date_debutExperience\\\" (dateInput)=\\\"onChangeInput($event)\\\" [ngModel]=\\\"(experienceAModifier | async)?.date_debut\\\">\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #picker3></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <!-- /.col-sm-2 -->\\r\\n          <div class=\\\"col-sm-2\\\">\\r\\n            <mat-form-field class=\\\"large\\\">\\r\\n              <input matInput [matDatepicker]=\\\"picker4\\\" placeholder=\\\"Date fin\\\" name=\\\"date_finExperience\\\" (dateInput)=\\\"onChangeInput($event)\\\" [ngModel]=\\\"(experienceAModifier | async)?.date_fin\\\">\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker4\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #picker4></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <!-- /.col-sm-2 -->\\r\\n        </div>\\r\\n        <!-- /.row -->\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-12\\\">\\r\\n            <mat-form-field class=\\\"large\\\">\\r\\n              <textarea matInput placeholder=\\\"Ajouter une petite description\\\" name=\\\"descriptionExperience\\\" (keyup)=\\\"onChangeInput($event)\\\" [ngModel]=\\\"(experienceAModifier | async)?.description\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <!-- /.col-sm-12 -->\\r\\n        </div>\\r\\n        <!-- /.row -->\\r\\n      </div>\\r\\n      <!-- /.well -->\\r\\n      \\r\\n    </div>\\r\\n    <!-- /#ajouterExperience -->\\r\\n    \\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-6 col-sm-2\\\" *ngIf=\\\"!boutonModifier\\\">\\r\\n        <button *ngIf=\\\"!etatChange\\\" class=\\\"waves-effect waves-light btn large\\\"     [attr.aria-expanded]=\\\"!isCollapsed\\\" (click)=\\\"onClickAjouter()\\\" type=\\\"button\\\" >ajouter</button>\\r\\n        <button *ngIf=\\\"etatChange\\\"  class=\\\"waves-effect waves-light btn large\\\"     (click)=\\\"onClickEnregistrerExperience()\\\" type=\\\"button\\\" >Enregistrer</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-xs-6 col-sm-2\\\" *ngIf=\\\"boutonModifier\\\">\\r\\n        <button *ngIf=\\\"!etatChange\\\" class=\\\"waves-effect waves-light btn large\\\"     type=\\\"button\\\">Modifier</button>\\r\\n        <button *ngIf=\\\"etatChange\\\"  class=\\\"waves-effect waves-light btn large\\\"     (click)=\\\"onClickEnregistrerModifExperience()\\\" type=\\\"button\\\">Enregistrer</button>\\r\\n      </div>\\r\\n      <!-- /.col-xs-6 col-sm-2 -->\\r\\n      <div class=\\\"col-xs-6 col-sm-2\\\" *ngIf=\\\"etatOuvert && !etatchange\\\">\\r\\n        <button class=\\\"waves-effect waves-light btn large btn-white\\\" type=\\\"button\\\" (click)=\\\"onClickFermer()\\\" >Fermer</button>\\r\\n      </div>\\r\\n      <!-- /.col-xs-6 col-sm-2 -->\\r\\n      <div class=\\\"col-xs-6 col-sm-2\\\" *ngIf=\\\"etatChange\\\">\\r\\n        <button class=\\\"waves-effect waves-light btn large btn-white\\\" type=\\\"button\\\" (click)=\\\"onClickAnnuler()\\\">Annuler</button>\\r\\n      </div>\\r\\n      <!-- /.col-xs-6 col-sm-2 -->\\r\\n    </div>\\r\\n    <!-- /.row -->\\r\\n  </div>\\r\\n</div>\\r\\n<!-- /.bloc-option-profil -->\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ExperienceService } from './experience.service'\r\nimport { Experience } from './experience.model';\r\nimport { ControlContainer, NgForm, FormGroup } from '@angular/forms';\r\nimport { MatDatepickerIntl, MAT_DATE_LOCALE, DateAdapter, MAT_DATE_FORMATS, MatSnackBarConfig, MatSnackBar } from '@angular/material';\r\nimport * as $ from 'jquery';\r\nimport { Observable } from 'rxjs';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'app-experience',\r\n  templateUrl: './experience.component.html',\r\n  styleUrls: ['./experience.component.css'],\r\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ],\r\n  providers: [\r\n    {provide: MAT_DATE_LOCALE, useValue: 'fr-FR'},\r\n  ],\r\n})\r\nexport class ExperienceComponent extends MatDatepickerIntl implements OnInit {\r\n  @Input() keyUtilisateur: any;\r\n  @Input('groupFormExperience') formGroupExperience: FormGroup;\r\n  \r\n  experiences: Experience[];\r\n  nouvelleExperience: Experience = new Experience(\"\", \"\", undefined, undefined, \"\");\r\n  experienceAModifier: Observable<Experience>;\r\n  tmpNouvelleExperienceModifie: Experience;\r\n  etatChange: boolean = false;\r\n  etatOuvert: boolean = false;\r\n  config = new MatSnackBarConfig();\r\n  boutonModifier: boolean = false;\r\n  docExperienceIdCourant: any;\r\n  isCollapsed = false;\r\n  \r\n  constructor(private experienceService: ExperienceService, private adapter: DateAdapter<any>, public snackBar: MatSnackBar, public dialog: MatDialog) { \r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.adapter.setLocale('fr');\r\n    this.experienceService.experiencesChanged.subscribe( datas => {\r\n      this.experiences = datas; \r\n      this.experiences.reverse();     \r\n    })    \r\n    this.experienceService.getExperiences(this.keyUtilisateur);\r\n    this.config.duration = 5000;\r\n  }\r\n\r\n  resetForms(){\r\n    this.formGroupExperience.controls['titreExperience'].setValue(null)\r\n    this.formGroupExperience.controls['nom_societeExperience'].setValue(null)\r\n    this.formGroupExperience.controls['date_debutExperience'].setValue(null)\r\n    this.formGroupExperience.controls['date_finExperience'].setValue(null)\r\n    this.formGroupExperience.controls['descriptionExperience'].setValue(null)\r\n  }\r\n\r\n  onChangeInput(event){\r\n    this.etatChange = true;\r\n    this.etatOuvert = false;\r\n  }\r\n\r\n  afficherNotification(message: string, couleur: string){\r\n    this.config.panelClass = [couleur];\r\n    this.snackBar.open(message, undefined, this.config);\r\n  }\r\n\r\n  AjouterExperience(){\r\n    this.experienceService.ajouterExperience(this.keyUtilisateur, this.nouvelleExperience).then(\r\n        result => {\r\n            this.afficherNotification('Ajouté', 'background-verte');\r\n            this.etatChange = false;\r\n            this.resetForms();\r\n        }\r\n    )\r\n    .catch(\r\n        error =>{\r\n            this.afficherNotification('Ajout non réussi', 'background-rouge');\r\n        }\r\n    );\r\n  }\r\n\r\n  onClickEnregistrerExperience(){\r\n    this.nouvelleExperience.titre = this.formGroupExperience.controls['titreExperience'].value;\r\n    this.nouvelleExperience.nom_societe = this.formGroupExperience.controls['nom_societeExperience'].value;\r\n    this.nouvelleExperience.date_debut = this.formGroupExperience.controls['date_debutExperience'].value?new Date(this.formGroupExperience.controls['date_debutExperience'].value):undefined;\r\n    this.nouvelleExperience.date_fin =   this.formGroupExperience.controls['date_finExperience'].value?new Date(this.formGroupExperience.controls['date_finExperience'].value):undefined;\r\n    this.nouvelleExperience.description = this.formGroupExperience.controls['descriptionExperience'].value;\r\n    this.isCollapsed = false;\r\n    this.AjouterExperience();\r\n  }\r\n\r\n  onClickSupprimerExperience(docExperienceId: any){\r\n\r\n    this.experienceService.supprimerExperience(this.keyUtilisateur, docExperienceId).then(\r\n        result => {\r\n            this.afficherNotification('Supprimé', 'background-verte');\r\n            this.etatChange = false;\r\n            this.resetForms();\r\n        }\r\n    )\r\n    .catch(\r\n        error =>{\r\n            this.afficherNotification('Suppression non réussite', 'background-rouge');\r\n        }\r\n    );\r\n  }\r\n\r\n onClickEnregistrerModifExperience(){\r\n    this.experienceService.modifierExperience(this.keyUtilisateur, this.docExperienceIdCourant, this.getExperienceAModifier()).then(\r\n        result => {\r\n            this.afficherNotification('Modifié', 'background-verte');\r\n            this.boutonModifier = false;\r\n            this.etatChange = false;\r\n            this.isCollapsed = false;\r\n            this.resetForms();\r\n          }\r\n    )\r\n    .catch(\r\n        error =>{\r\n            this.afficherNotification('Modification non réussite', 'background-rouge');\r\n        }\r\n    );\r\n  }\r\n\r\n  getExperienceAModifier(){\r\n    this.tmpNouvelleExperienceModifie.titre = this.formGroupExperience.controls['titreExperience'].value;\r\n    this.tmpNouvelleExperienceModifie.nom_societe = this.formGroupExperience.controls['nom_societeExperience'].value;\r\n    this.tmpNouvelleExperienceModifie.date_debut = this.formGroupExperience.controls['date_debutExperience'].value?new Date(this.formGroupExperience.controls['date_debutExperience'].value):undefined;\r\n    this.tmpNouvelleExperienceModifie.date_fin =   this.formGroupExperience.controls['date_finExperience'].value?new Date(this.formGroupExperience.controls['date_finExperience'].value):undefined;\r\n    this.tmpNouvelleExperienceModifie.description = this.formGroupExperience.controls['descriptionExperience'].value;\r\n    return this.tmpNouvelleExperienceModifie;\r\n  }\r\n\r\n  onClickModifierExperience(docExperienceId: any){\r\n    this.boutonModifier = true;\r\n    this.etatOuvert = true;\r\n    this.docExperienceIdCourant = docExperienceId;\r\n    this.isCollapsed = true;\r\n    this.experienceAModifier = this.experienceService.getExperience(this.keyUtilisateur, docExperienceId);\r\n    this.experienceAModifier.subscribe(datas =>{\r\n      this.tmpNouvelleExperienceModifie = datas;\r\n    })\r\n  }\r\n\r\n  onClickAnnuler(){\r\n    this.boutonModifier = false;\r\n    this.etatChange = false;\r\n    this.isCollapsed = false;\r\n    this.resetForms();\r\n  }\r\n\r\n  onClickFermer(){\r\n    this.etatOuvert = false;\r\n    this.boutonModifier = false;\r\n    this.etatChange = false;\r\n    this.isCollapsed = false;\r\n    this.resetForms();\r\n  }\r\n\r\n  onClickAjouter(){\r\n    this.etatOuvert = true;\r\n    this.isCollapsed = true;\r\n  }\r\n}\r\n\r\n\r\n","export class Experience {\r\n    public titre: string;\r\n    public nom_societe: string;\r\n    public date_debut: Date;\r\n    public date_fin: Date;\r\n    public description: string;\r\n  \r\n    constructor(\r\n    titre: string, nom_societe: string, date_debut: Date, date_fin: Date, description: string) {\r\n    this.titre = titre;\r\n    this.nom_societe = nom_societe;\r\n    this.date_debut = date_debut;\r\n    this.date_fin = date_fin;\r\n    this.description = description;\r\n    }\r\n  } \r\n  ","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { Experience } from './experience.model';\r\nimport { Utilisateur } from '../utilisateur.model';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class ExperienceService{\r\n    \r\n    constructor(private afs: AngularFirestore) {\r\n    }\r\n    experiencesLocalTmp : Experience[];\r\n    experiencesChanged = new Subject<Experience[]>();\r\n    experienceLocalTmp : Experience[];\r\n    experienceChanged = new Subject<Experience[]>();\r\n\r\n    getExperiences(docUtilisateurId: any){\r\n        return this.afs.collection<any>('utilisateurs').doc(docUtilisateurId).collection('experiences')\r\n        .snapshotChanges()\r\n            .map(actions => {\r\n                return actions.map(action => ({ \r\n                    $key: action.payload.doc.id,\r\n                    date_debut: action.payload.doc.data().date_debut,\r\n                    date_fin:   action.payload.doc.data().date_fin,\r\n                    ...action.payload.doc.data()\r\n                }));\r\n            })\r\n            .subscribe(\r\n                (response: any[]) => {\r\n                    this.experiencesLocalTmp = response;\r\n                    this.experiencesChanged.next([...this.experiencesLocalTmp]); // spread operator to create a copy\r\n                }\r\n            );\r\n    }\r\n\r\n    getExperience(docUtilisateurId: any, docEducationId: any) : Observable<Experience>{\r\n        return this.afs.collection<Utilisateur>('utilisateurs').doc(docUtilisateurId).collection<Experience>('experiences').doc<Experience>(docEducationId).valueChanges();\r\n    }\r\n    \r\n    ajouterExperience(docUtilisateurId: any, experience: Experience){\r\n        let experienceJSON = JSON.parse(JSON.stringify(experience))\r\n        return this.afs.collection<Utilisateur>('utilisateurs').doc(docUtilisateurId).collection<Experience>('experiences').add(experienceJSON);\r\n    }\r\n\r\n    supprimerExperience(docUtilisateurId: any, docExperienceId: any){\r\n        return this.afs.collection<Utilisateur>('utilisateurs').doc(docUtilisateurId).collection<Experience>('experiences').doc(docExperienceId).delete();\r\n    }\r\n\r\n    modifierExperience(docUtilisateurId: any, docExperienceId: any, experience: Experience){\r\n        let experienceJSON = JSON.parse(JSON.stringify(experience))\r\n        return this.afs.collection('utilisateurs').doc(docUtilisateurId).collection('experiences').doc(docExperienceId).update(experienceJSON);\r\n    }\r\n\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"bloc-option-profil\\\">\\r\\n  <div class=\\\"titre-option-profil souligne\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n              Langues\\r\\n          </div>\\r\\n          <!-- /.col-sm-4 -->\\r\\n      </div>\\r\\n      <!-- /.row --> \\r\\n  </div>\\r\\n  <!-- /.titre-option-profil -->\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n          <div class=\\\"txt-infos-profil\\\">\\r\\n              Ajoutez toutes les langues que vous connaissez\\r\\n          </div>\\r\\n          <!-- /.txt-infos-profil -->\\r\\n      </div>\\r\\n      <!-- /.col-sm-6 -->\\r\\n  </div>\\r\\n  <!-- /.row -->\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <mat-form-field class=\\\"example-chip-list\\\">\\r\\n          <mat-chip-list #chipList>\\r\\n            <mat-chip\\r\\n              *ngFor=\\\"let langue of languesUtilisateur\\\"\\r\\n              [selectable]=\\\"selectable\\\"\\r\\n              [removable]=\\\"removable\\\"\\r\\n              (removed)=\\\"remove(langue, langue.$key)\\\">\\r\\n              {{langue.titre_langue}}\\r\\n              <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n            </mat-chip>\\r\\n            <input\\r\\n              placeholder=\\\"Ajouter une langue\\\"\\r\\n              #langueInput\\r\\n              [formControl]=\\\"langueCtrl\\\"\\r\\n              [matAutocomplete]=\\\"auto\\\"\\r\\n              [matChipInputFor]=\\\"chipList\\\"\\r\\n              [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\r\\n              [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\r\\n              (matChipInputTokenEnd)=\\\"add($event)\\\">\\r\\n          </mat-chip-list>\\r\\n          <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selected($event)\\\">\\r\\n            <mat-option *ngFor=\\\"let langue of filteredLangues | async\\\" [value]=\\\"langue\\\">\\r\\n              {{langue.titre_langue}}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n        \\r\\n      </div>\\r\\n      <!-- /.col-sm-4 -->\\r\\n  </div>\\r\\n  <!-- /.row -->\\r\\n</div>\\r\\n<!-- /.bloc-option-profil -->\\r\\n\"","import { Component, OnInit, Input, ElementRef, ViewChild } from '@angular/core';\r\nimport { LangueService } from './langue.service'\r\nimport { Langue } from './langue.model';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { MatAutocompleteSelectedEvent, MatChipInputEvent, MatAutocomplete, MatSnackBarConfig, MatSnackBar } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-langue',\r\n  templateUrl: './langue.component.html',\r\n  styleUrls: ['./langue.component.css']\r\n})\r\nexport class LangueComponent implements OnInit {\r\n  \r\n  @Input() keyUtilisateur: any;\r\n  @Input('groupFormLangue') formGroupLangue: FormGroup;\r\n\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  formControl = new FormControl();\r\n  filteredLangues: Observable<string[]>;\r\n  languesUtilisateur: Langue[];\r\n  allLangues: string[];\r\n  config = new MatSnackBarConfig();\r\n\r\n  @ViewChild('langueInput') langueInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n\r\n  constructor(private langueService: LangueService, public snackBar: MatSnackBar) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.config.duration = 5000;\r\n    this.langueService.languesChanged.subscribe( datas => {\r\n      this.languesUtilisateur = JSON.parse(JSON.stringify(datas));  \r\n    })    \r\n    this.langueService.getLangues(this.keyUtilisateur);\r\n\r\n    this.langueService.languesDisponibleChanged.subscribe( datas => {\r\n      this.allLangues = JSON.parse(JSON.stringify(datas));   \r\n      this.filteredLangues = this.formControl.valueChanges.pipe(\r\n        startWith(null),\r\n        map((langue: string | null) => langue ? this._filter(langue) : this.allLangues.slice()));\r\n    })    \r\n    this.langueService.getLanguesDisponible();\r\n  }\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    if (!this.matAutocomplete.isOpen) {\r\n      const input = event.input;\r\n      const value = event.value;\r\n\r\n      // Add our langue\r\n      if ((value || '').trim()) {\r\n        this.languesUtilisateur.push({'titre_langue': value.trim()});\r\n        this.langueService.ajouterLangue(this.keyUtilisateur, {'titre_langue': value.trim()}).then(\r\n            result => {\r\n                this.afficherNotification('Ajouté', 'background-verte');\r\n                \r\n              }\r\n        )\r\n        .catch(\r\n            error =>{\r\n                this.afficherNotification('Ajout non réussi', 'background-rouge');\r\n            }\r\n        );\r\n      }\r\n\r\n      // Reset the input value\r\n      if (input) {\r\n        input.value = '';\r\n      }\r\n\r\n      this.formControl.setValue(null);\r\n    }\r\n  }\r\n\r\n  remove(langue: string, docLangueId: any): void {\r\n    const index = this.languesUtilisateur.indexOf({'titre_langue' : langue});\r\n    this.langueService.supprimerLangue(this.keyUtilisateur, docLangueId).then(\r\n        result => {\r\n            this.afficherNotification('Supprimé', 'background-verte');\r\n        }\r\n    )\r\n    .catch(\r\n        error =>{\r\n            this.afficherNotification('Suppression non réussite', 'background-rouge');\r\n        }\r\n    );\r\n    if (index >= 0) {\r\n      this.languesUtilisateur.splice(index, 1);\r\n      \r\n    }\r\n  }\r\n\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    let trouve = this.languesUtilisateur.map(a => a.titre_langue).includes(event.option.viewValue);\r\n    if(!trouve){\r\n      this.languesUtilisateur.push({'titre_langue':event.option.viewValue});\r\n      this.langueService.ajouterLangue(this.keyUtilisateur, {'titre_langue': event.option.viewValue}).then(\r\n          result => {\r\n              this.afficherNotification('Ajouté', 'background-verte');\r\n              \r\n            }\r\n      )\r\n      .catch(\r\n          error =>{\r\n              this.afficherNotification('Ajout non réussi', 'background-rouge');\r\n          }\r\n      );\r\n    \r\n      this.langueInput.nativeElement.value = '';\r\n      this.formControl.setValue(null);\r\n    }\r\n    \r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.allLangues.filter(langue => langue.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n\r\n  afficherNotification(message: string, couleur: string){\r\n    this.config.panelClass = [couleur];\r\n    this.snackBar.open(message, undefined, this.config);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { Langue } from './langue.model';\r\nimport { Utilisateur } from '../utilisateur.model';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class LangueService{\r\n    \r\n    constructor(private afs: AngularFirestore) {\r\n    }\r\n    languesLocalTmp : Langue[];\r\n    languesChanged = new Subject<Langue[]>();\r\n    languesDisponibleChanged = new Subject<Langue[]>();\r\n    langueLocalTmp : Langue[];\r\n    langueChanged = new Subject<Langue[]>();\r\n\r\n    getLangues(docUtilisateurId: any){\r\n        return this.afs.collection<any>('utilisateurs').doc(docUtilisateurId).collection('langues')\r\n        .snapshotChanges()\r\n            .map(actions => {\r\n                return actions.map(action => ({\r\n                    $key: action.payload.doc.id,\r\n                    ...action.payload.doc.data()\r\n                }));\r\n            })\r\n            .subscribe(\r\n                (response: any[]) => {\r\n                    this.languesLocalTmp = response;\r\n                    this.languesChanged.next([...this.languesLocalTmp]); // spread operator to create a copy\r\n                }\r\n            );\r\n    }\r\n\r\n    getLangue(docUtilisateurId: any, docEducationId: any) : Observable<Langue>{\r\n        return this.afs.collection<Utilisateur>('utilisateurs').doc(docUtilisateurId).collection<Langue>('langues').doc<Langue>(docEducationId).valueChanges();\r\n    }\r\n    \r\n    ajouterLangue(docUtilisateurId: any, langue: Langue){\r\n        let langueJSON = JSON.parse(JSON.stringify(langue))\r\n        console.log(langue)\r\n        console.log(langueJSON)\r\n        return this.afs.collection<Utilisateur>('utilisateurs').doc(docUtilisateurId).collection<Langue>('langues').add(langueJSON);\r\n    }\r\n\r\n    supprimerLangue(docUtilisateurId: any, docLangueId: any){\r\n        return this.afs.collection<Utilisateur>('utilisateurs').doc(docUtilisateurId).collection<Langue>('langues').doc(docLangueId).delete();\r\n    }\r\n\r\n    modifierLangue(docUtilisateurId: any, docLangueId: any, langue: Langue){\r\n        let langueJSON = JSON.parse(JSON.stringify(langue))\r\n        return this.afs.collection('utilisateurs').doc(docUtilisateurId).collection('langues').doc(docLangueId).update(langueJSON);\r\n    }\r\n\r\n    getLanguesDisponible(){ //From Administrator Database\r\n        return this.afs.collection<any>('langues_disponibles')\r\n        .snapshotChanges()\r\n            .map(actions => {\r\n                return actions.map(action => ({\r\n                    ...action.payload.doc.data()\r\n                }));\r\n            })\r\n            .subscribe(\r\n                (response: any[]) => {\r\n                    this.languesDisponibleChanged.next([...response]); // spread operator to create a copy\r\n                }\r\n            );\r\n    }\r\n\r\n}","module.exports = \"\"","module.exports = \"<mat-form-field class=\\\"example-chip-list\\\">\\r\\n  <mat-chip-list #chipListRenum>\\r\\n    <mat-chip\\r\\n      *ngFor=\\\"let renumeration of renumerationsUtilisateur\\\"\\r\\n      [selectable]=\\\"selectable\\\"\\r\\n      [removable]=\\\"removable\\\"\\r\\n      (removed)=\\\"remove(renumeration, renumeration.$key)\\\">\\r\\n      {{renumeration.titre_renumeration}}\\r\\n      <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n    </mat-chip>\\r\\n    <input\\r\\n      placeholder=\\\"Palier rémunération\\\"\\r\\n      #renumerationInput\\r\\n      [formControl]=\\\"renumerationCtrl\\\"\\r\\n      [matAutocomplete]=\\\"auto\\\"\\r\\n      [matChipInputFor]=\\\"chipListRenum\\\"\\r\\n      [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\r\\n      [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\r\\n      (matChipInputTokenEnd)=\\\"add($event)\\\">\\r\\n  </mat-chip-list>\\r\\n  <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selected($event)\\\">\\r\\n    <mat-option *ngFor=\\\"let renumeration of filteredRenumerations | async\\\" [value]=\\\"renumeration\\\">\\r\\n      {{renumeration.titre}}\\r\\n    </mat-option>\\r\\n  </mat-autocomplete>\\r\\n</mat-form-field>\\r\\n\\r\\n\"","import { Component, OnInit, Input, ElementRef, ViewChild } from '@angular/core';\r\nimport { RenumerationService } from './renumeration.service'\r\nimport { Renumeration } from './renumeration.model';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { MatAutocompleteSelectedEvent, MatChipInputEvent, MatAutocomplete, MatSnackBarConfig, MatSnackBar } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-renumeration',\r\n  templateUrl: './renumeration.component.html',\r\n  styleUrls: ['./renumeration.component.css']\r\n})\r\nexport class RenumerationComponent implements OnInit {\r\n  \r\n  @Input() keyUtilisateur: any;\r\n  @Input('groupFormRenumeration') formGroupRenumeration: FormGroup;\r\n\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  formControl = new FormControl();\r\n  filteredRenumerations: Observable<string[]>;\r\n  renumerationsUtilisateur: Renumeration[];\r\n  allRenumerations: string[];\r\n  config = new MatSnackBarConfig();\r\n\r\n  @ViewChild('renumerationInput') renumerationInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n\r\n  constructor(private renumerationService: RenumerationService, public snackBar: MatSnackBar) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.config.duration = 5000;\r\n    this.renumerationService.renumerationsChanged.subscribe( datas => {\r\n      this.renumerationsUtilisateur = JSON.parse(JSON.stringify(datas));  \r\n    })    \r\n    this.renumerationService.getRenumerations(this.keyUtilisateur);\r\n\r\n    this.renumerationService.renumerationsDisponibleChanged.subscribe( datas => {\r\n      this.allRenumerations = JSON.parse(JSON.stringify(datas));   \r\n      this.filteredRenumerations = this.formControl.valueChanges.pipe(\r\n        startWith(null),\r\n        map((renumeration: string | null) => renumeration ? this._filter(renumeration) : this.allRenumerations.slice()));\r\n    })    \r\n    this.renumerationService.getRenumerationsDisponible();\r\n  }\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    if (!this.matAutocomplete.isOpen) {\r\n      const input = event.input;\r\n      const value = event.value;\r\n\r\n      // Add our renumeration\r\n      if ((value || '').trim()) {\r\n        this.renumerationsUtilisateur.push({'titre_renumeration': value.trim()});\r\n        this.renumerationService.ajouterRenumeration(this.keyUtilisateur, {'titre_renumeration': value.trim()}).then(\r\n            result => {\r\n                this.afficherNotification('Ajouté', 'background-verte');\r\n                \r\n              }\r\n        )\r\n        .catch(\r\n            error =>{\r\n                this.afficherNotification('Ajout non réussi', 'background-rouge');\r\n            }\r\n        );\r\n      }\r\n\r\n      // Reset the input value\r\n      if (input) {\r\n        input.value = '';\r\n      }\r\n\r\n      this.formControl.setValue(null);\r\n    }\r\n  }\r\n\r\n  remove(renumeration: string, docRenumerationId: any): void {\r\n    const index = this.renumerationsUtilisateur.indexOf({'titre_renumeration' : renumeration});\r\n    this.renumerationService.supprimerRenumeration(this.keyUtilisateur, docRenumerationId).then(\r\n        result => {\r\n            this.afficherNotification('Supprimé', 'background-verte');\r\n        }\r\n    )\r\n    .catch(\r\n        error =>{\r\n            this.afficherNotification('Suppression non réussite', 'background-rouge');\r\n        }\r\n    );\r\n    if (index >= 0) {\r\n      this.renumerationsUtilisateur.splice(index, 1);\r\n      \r\n    }\r\n  }\r\n\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    let trouve = this.renumerationsUtilisateur.map(a => a.titre_renumeration).includes(event.option.viewValue);\r\n    let nbr_renumeration = this.renumerationsUtilisateur.length;\r\n    if(nbr_renumeration<2){\r\n      if(!trouve){\r\n        this.renumerationsUtilisateur.push({'titre_renumeration':event.option.viewValue});\r\n        this.renumerationService.ajouterRenumeration(this.keyUtilisateur, {'titre_renumeration': event.option.viewValue}).then(\r\n            result => {\r\n                this.afficherNotification('Ajouté', 'background-verte');\r\n                \r\n              }\r\n        )\r\n        .catch(\r\n            error =>{\r\n                this.afficherNotification('Ajout non réussi', 'background-rouge');\r\n            }\r\n        );\r\n      \r\n        this.renumerationInput.nativeElement.value = '';\r\n        this.formControl.setValue(null);\r\n      }\r\n    }else{\r\n      this.afficherNotification('Choisir au maximum deux paliers', 'background-rouge');\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.allRenumerations.filter(renumeration => renumeration.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n\r\n  afficherNotification(message: string, couleur: string){\r\n    this.config.panelClass = [couleur];\r\n    this.snackBar.open(message, undefined, this.config);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { Renumeration } from './renumeration.model';\r\nimport { Utilisateur } from '../utilisateur.model';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class RenumerationService{\r\n    \r\n    constructor(private afs: AngularFirestore) {\r\n    }\r\n    renumerationsLocalTmp : Renumeration[];\r\n    renumerationsChanged = new Subject<Renumeration[]>();\r\n    renumerationsDisponibleChanged = new Subject<Renumeration[]>();\r\n    renumerationLocalTmp : Renumeration[];\r\n    renumerationChanged = new Subject<Renumeration[]>();\r\n\r\n    getRenumerations(docUtilisateurId: any){\r\n        return this.afs.collection<any>('utilisateurs').doc(docUtilisateurId).collection('renumerations', ref => ref.orderBy('titre_renumeration'))\r\n        .snapshotChanges()\r\n            .map(actions => {\r\n                return actions.map(action => ({\r\n                    $key: action.payload.doc.id,\r\n                    ...action.payload.doc.data()\r\n                }));\r\n            })\r\n            .subscribe(\r\n                (response: any[]) => {\r\n                    this.renumerationsLocalTmp = response;\r\n                    this.renumerationsChanged.next([...this.renumerationsLocalTmp]); // spread operator to create a copy\r\n                }\r\n            );\r\n    }\r\n\r\n    getRenumeration(docUtilisateurId: any, docEducationId: any) : Observable<Renumeration>{\r\n        return this.afs.collection<Utilisateur>('utilisateurs').doc(docUtilisateurId).collection<Renumeration>('renumerations').doc<Renumeration>(docEducationId).valueChanges();\r\n    }\r\n    \r\n    ajouterRenumeration(docUtilisateurId: any, renumeration: Renumeration){\r\n        let renumerationJSON = JSON.parse(JSON.stringify(renumeration))\r\n        console.log(renumeration)\r\n        console.log(renumerationJSON)\r\n        return this.afs.collection<Utilisateur>('utilisateurs').doc(docUtilisateurId).collection<Renumeration>('renumerations').add(renumerationJSON);\r\n    }\r\n\r\n    supprimerRenumeration(docUtilisateurId: any, docRenumerationId: any){\r\n        return this.afs.collection<Utilisateur>('utilisateurs').doc(docUtilisateurId).collection<Renumeration>('renumerations').doc(docRenumerationId).delete();\r\n    }\r\n\r\n    modifierRenumeration(docUtilisateurId: any, docRenumerationId: any, renumeration: Renumeration){\r\n        let renumerationJSON = JSON.parse(JSON.stringify(renumeration))\r\n        return this.afs.collection('utilisateurs').doc(docUtilisateurId).collection('renumerations').doc(docRenumerationId).update(renumerationJSON);\r\n    }\r\n\r\n    getRenumerationsDisponible(){ //From Administrator Database\r\n        return this.afs.collection<any>('renumerations_disponibles', ref => ref.orderBy(\"titre\"))\r\n        .snapshotChanges()\r\n            .map(actions => {\r\n                return actions.map(action => ({\r\n                    ...action.payload.doc.data()\r\n                }));\r\n            })\r\n            .subscribe(\r\n                (response: any[]) => {\r\n                    this.renumerationsDisponibleChanged.next([...response]); // spread operator to create a copy\r\n                }\r\n            );\r\n    }\r\n\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"bloc-option-profil technologie\\\">\\r\\n  <div class=\\\"titre-option-profil souligne\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n              Technologies\\r\\n          </div>\\r\\n          <!-- /.col-sm-4 -->\\r\\n      </div>\\r\\n      <!-- /.row --> \\r\\n  </div>\\r\\n  <!-- /.titre-option-profil -->\\r\\n  \\r\\n  <div class=\\\"row\\\" *ngIf=\\\"technologies?.length > 0\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <table class=\\\"highlight\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Nom de la technologie</th>\\r\\n            <th>Pourcentage de maitrise</th>\\r\\n            <th>Actions</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let technologie of technologies; let i = index\\\">\\r\\n            <td>{{technologie?.titre}}</td>\\r\\n            <td><mat-progress-bar class=\\\"margin-top5\\\" mode=\\\"determinate\\\" [value]=\\\"technologie.pourcentage\\\"></mat-progress-bar> <span>{{technologie?.pourcentage}}%</span></td>\\r\\n            <td class=\\\"action\\\"> \\r\\n              <i class=\\\"material-icons \\\" [attr.aria-expanded]=\\\"!isCollapsed\\\" (click)=\\\"onClickModifierTechnologie(technologie.$key)\\\">create</i>            \\r\\n              <i class=\\\"material-icons \\\" (click)=\\\"onClickSupprimerTechnologie(technologie.$key)\\\">delete</i>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <!-- /.col-sm-12 -->\\r\\n  </div>\\r\\n  <!-- /.row -->\\r\\n  <br>\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n          <div class=\\\"txt-infos-profil\\\">\\r\\n              Ajoutez vos compétences en terme de pourcentage, un atout pour vos candidatures, ...\\r\\n          </div>\\r\\n          <!-- /.txt-infos-profil -->\\r\\n      </div>\\r\\n      <!-- /.col-sm-6 -->\\r\\n  </div>\\r\\n  <!-- /.row -->\\r\\n  <div id=\\\"ajouterTechnologie\\\" class=\\\"collapse\\\" [ngbCollapse]=\\\"!isCollapsed\\\">\\r\\n    <div class=\\\"well\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <input type=\\\"text\\\" \\r\\n            placeholder=\\\"Technologie\\\" \\r\\n            aria-label=\\\"Technologie\\\" \\r\\n            matInput \\r\\n            [formControl]=\\\"inputTitreTechnologie\\\" \\r\\n            [matAutocomplete]=\\\"auto\\\"\\r\\n            >\\r\\n            <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"onChangeInput($event.option)\\\">\\r\\n              <mat-option *ngFor=\\\"let technologie of filteredTechnologies | async\\\" [value]=\\\"technologie.titre\\\">\\r\\n                {{technologie.titre}}\\r\\n              </mat-option>\\r\\n            </mat-autocomplete>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <!-- /.col-sm-4 -->\\r\\n        <div class=\\\"col-sm-2\\\"></div>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <mat-slider style=\\\"width: 100%\\\"\\r\\n          [ngModel]=\\\"(technologieAModifier | async)?.pourcentage\\\"\\r\\n          (change)=\\\"onChangePourcentage($event)\\\"\\r\\n          name=\\\"pourcentage\\\"\\r\\n          thumbLabel\\r\\n          [displayWith]=\\\"formatLabel\\\"\\r\\n          tickInterval=\\\"100\\\"\\r\\n          min=\\\"1\\\"\\r\\n          max=\\\"100\\\"\\r\\n          color=\\\"warn\\\"></mat-slider>\\r\\n        </div>\\r\\n        <!-- /.col-sm-8 -->\\r\\n      </div>\\r\\n      <!-- /.row -->\\r\\n    </div>\\r\\n    <!-- /.well -->\\r\\n  </div>\\r\\n  <!-- /#ajouterTechnologie -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-6 col-sm-2\\\" *ngIf=\\\"!boutonModifier\\\">\\r\\n      <button *ngIf=\\\"!etatChange\\\" class=\\\"waves-effect waves-light btn large\\\"     [attr.aria-expanded]=\\\"!isCollapsed\\\" (click)=\\\"onClickAjouter()\\\" type=\\\"button\\\" >ajouter</button>\\r\\n      <button *ngIf=\\\"etatChange\\\"  class=\\\"waves-effect waves-light btn large\\\"     (click)=\\\"onClickEnregistrerTechnologie()\\\" type=\\\"button\\\" >Enregistrer</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-6 col-sm-2\\\" *ngIf=\\\"boutonModifier\\\">\\r\\n      <button *ngIf=\\\"!etatChange\\\" class=\\\"waves-effect waves-light btn large\\\"     type=\\\"button\\\">Modifier</button>\\r\\n      <button *ngIf=\\\"etatChange\\\"  class=\\\"waves-effect waves-light btn large\\\"     (click)=\\\"onClickEnregistrerModifTechnologie()\\\" type=\\\"button\\\">Enregistrer</button>\\r\\n    </div>\\r\\n    <!-- /.col-xs-6 col-sm-2 -->\\r\\n    <div class=\\\"col-xs-6 col-sm-2\\\" *ngIf=\\\"etatOuvert && !etatchange\\\">\\r\\n      <button class=\\\"waves-effect waves-light btn large btn-white\\\" type=\\\"button\\\" (click)=\\\"onClickFermer()\\\" >Fermer</button>\\r\\n    </div>\\r\\n    <!-- /.col-xs-6 col-sm-2 -->\\r\\n    <div class=\\\"col-xs-6 col-sm-2\\\" *ngIf=\\\"etatChange\\\">\\r\\n      <button class=\\\"waves-effect waves-light btn large btn-white\\\" type=\\\"button\\\" (click)=\\\"onClickAnnuler()\\\">Annuler</button>\\r\\n    </div>\\r\\n    <!-- /.col-xs-6 col-sm-2 -->\\r\\n  </div>\\r\\n  <!-- /.row -->\\r\\n</div>\\r\\n<!-- /.bloc-option-profil -->\"","\r\nimport { startWith, map } from 'rxjs/operators';\r\nimport { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { TechnologieService } from './technologie.service'\r\nimport { Technologie } from './technologie.model';\r\nimport { ControlContainer, FormControl, NgForm, FormGroup } from '@angular/forms';\r\nimport { MatSnackBarConfig, MatSnackBar } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'app-technologie',\r\n  templateUrl: './technologie.component.html',\r\n  styleUrls: ['./technologie.component.css'],\r\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ],\r\n})\r\nexport class TechnologieComponent implements OnInit {\r\n\r\n  @Input() keyUtilisateur: any;\r\n  @Input('groupFormTechnologie') formTechnologie: FormGroup;\r\n\r\n  inputTitre: string;\r\n  technologies: Technologie[];\r\n  tmpTechnologie: Technologie = new Technologie(\"\", 10);\r\n  technologieAModifier: Observable<Technologie>;\r\n  tmpNouvelleTechnologieModifie: Technologie;\r\n  etatChange: boolean = false;\r\n  etatOuvert: boolean = false;\r\n  config = new MatSnackBarConfig();\r\n  boutonModifier: boolean = false;\r\n  docTechnologieIdCourant: any;\r\n  isCollapsed = false;\r\n  selectedTechnologie: string;\r\n\r\n  technologiesDisponibles: Technologie[] = [\r\n    {titre: 'css', pourcentage: 50},\r\n    {titre: 'javascript', pourcentage: 70},\r\n    {titre: 'jQuery', pourcentage: 30}\r\n  ];\r\n  inputTitreTechnologie = new FormControl();\r\n  filteredTechnologies: Observable<Technologie[]>;\r\n  question = 'Voulez vous ajouter ';\r\n\r\n  constructor(private technologieService: TechnologieService, public snackBar: MatSnackBar, public dialog: MatDialog ) { }\r\n  \r\n  ngOnInit() {\r\n\r\n    this.technologieService.technologiesChanged.subscribe( datas => {\r\n      this.technologies = datas.reverse();      \r\n    })    \r\n    this.technologieService.getTechnologies(this.keyUtilisateur);\r\n\r\n    this.technologieService.technologiesDisponibleChanged.subscribe( datas => {\r\n      this.technologiesDisponibles = datas;  \r\n      this.filteredTechnologies = this.inputTitreTechnologie.valueChanges\r\n      .pipe(\r\n        startWith(null),\r\n        map((technologie: string | null) => technologie ? this._filter(technologie) : this.technologiesDisponibles.slice())\r\n      );\r\n    })    \r\n    this.technologieService.getTechnologiesDisponible();\r\n\r\n    this.config.duration = 5000;\r\n  }\r\n\r\n  resetForms(){\r\n    this.formTechnologie.controls['pourcentage'].setValue(null)\r\n  }\r\n\r\n  formatLabel(value: number | null) {\r\n    if (!value) {\r\n      return 0;\r\n    }\r\n    return value+\"%\";\r\n  }\r\n\r\n  private _filter(name: string): Technologie[] {\r\n    const filterValue = name.toLowerCase();\r\n    let results = this.technologiesDisponibles.filter(option => option.titre.toLowerCase().indexOf(filterValue) === 0);\r\n    if (results.length < 1) {\r\n      results = [{titre: this.question + name + '?', pourcentage: 0}];\r\n      // results = [this.question + JSON.stringify(name) + '?'];\r\n    }\r\n\r\n    \r\n\r\n    return results;\r\n  }\r\n\r\n  onChangeInput(option){\r\n    this.etatChange = true;\r\n    this.etatOuvert = false;\r\n    \r\n      if (option.value.indexOf(this.question) === 0) {\r\n        let nouvelleTechnologie = option.value.substring(this.question.length).split('?')[0];\r\n        console.log(nouvelleTechnologie)\r\n        this.technologieService.ajouterTechnologieDisponible(nouvelleTechnologie);\r\n        this.inputTitre = nouvelleTechnologie;\r\n        this.inputTitreTechnologie.setValue(this.inputTitre)\r\n      }else{\r\n        this.inputTitre = option.value\r\n      }\r\n    \r\n  }\r\n\r\n  onChangePourcentage(event){\r\n    this.etatChange = true;\r\n    this.etatOuvert = false;\r\n    if(event.option){this.inputTitre = event.option.value}\r\n  }\r\n\r\n  afficherNotification(message: string, couleur: string){\r\n    this.config.panelClass = [couleur];\r\n    this.snackBar.open(message, undefined, this.config);\r\n  }\r\n\r\n  AjouterTechnologie(){\r\n    this.technologieService.ajouterTechnologie(this.keyUtilisateur, this.tmpTechnologie).then(\r\n        result => {\r\n            this.afficherNotification('Ajouté', 'background-verte');\r\n            this.etatChange = false;\r\n            //this.resetForms();\r\n        }\r\n    )\r\n    .catch(\r\n        error =>{\r\n            this.afficherNotification('Ajout non réussi', 'background-rouge');\r\n        }\r\n    );\r\n  }\r\n\r\n  onClickEnregistrerTechnologie(){\r\n    this.tmpTechnologie.titre = this.inputTitre;\r\n    this.tmpTechnologie.pourcentage = this.formTechnologie.controls['pourcentage'].value;\r\n    this.isCollapsed = false;\r\n    this.AjouterTechnologie();\r\n  }\r\n\r\n  onClickSupprimerTechnologie(docTechnologieId: any){\r\n\r\n    this.technologieService.supprimerTechnologie(this.keyUtilisateur, docTechnologieId).then(\r\n        result => {\r\n            this.afficherNotification('Supprimé', 'background-verte');\r\n            this.etatChange = false;\r\n            this.resetForms();\r\n        }\r\n    )\r\n    .catch(\r\n        error =>{\r\n            this.afficherNotification('Suppression non réussite', 'background-rouge');\r\n        }\r\n    );\r\n  }\r\n\r\n onClickEnregistrerModifTechnologie(){\r\n    this.technologieService.modifierTechnologie(this.keyUtilisateur, this.docTechnologieIdCourant, this.getTechnologieAModifier()).then(\r\n        result => {\r\n            this.afficherNotification('Modifié', 'background-verte');\r\n            this.boutonModifier = false;\r\n            this.etatChange = false;\r\n            this.inputTitreTechnologie.setValue(undefined)\r\n            this.isCollapsed = false;\r\n            this.resetForms();\r\n          }\r\n    )\r\n    .catch(\r\n        error =>{\r\n            this.afficherNotification('Modification non réussite', 'background-rouge');\r\n        }\r\n    );\r\n  }\r\n\r\n  getTechnologieAModifier(){\r\n    this.tmpNouvelleTechnologieModifie.pourcentage = this.formTechnologie.controls['pourcentage'].value;\r\n    return this.tmpNouvelleTechnologieModifie;\r\n  } \r\n\r\n  onClickModifierTechnologie(docTechnologieId: any){\r\n    this.boutonModifier = true;\r\n    this.etatOuvert = true;\r\n    this.docTechnologieIdCourant = docTechnologieId;\r\n    this.isCollapsed = true;\r\n    this.technologieAModifier = this.technologieService.getTechnologie(this.keyUtilisateur, docTechnologieId);\r\n    this.technologieAModifier.subscribe(datas =>{\r\n      this.tmpNouvelleTechnologieModifie = datas;  \r\n      this.inputTitreTechnologie.disable();\r\n      this.inputTitreTechnologie.setValue(this.tmpNouvelleTechnologieModifie.titre)\r\n    })\r\n  }\r\n\r\n  onClickAnnuler(){\r\n    this.etatOuvert = false;\r\n    this.boutonModifier = false;\r\n    this.etatChange = false;\r\n    this.isCollapsed = false;\r\n    this.resetForms();\r\n  }\r\n\r\n  onClickFermer(){\r\n    this.etatOuvert = false;\r\n    this.boutonModifier = false;\r\n    this.etatChange = false;\r\n    this.isCollapsed = false;\r\n    this.resetForms();\r\n  }  \r\n\r\n  onClickAjouter(){\r\n    this.etatOuvert = true;\r\n    this.isCollapsed = true;\r\n    this.inputTitreTechnologie.enable();\r\n    this.inputTitreTechnologie.setValue(\"\")\r\n  }\r\n  \r\n  onClickModifier(){\r\n    this.etatOuvert = true;\r\n    this.isCollapsed = true;\r\n  }\r\n}\r\n","export class Technologie {\r\n    public titre: string;\r\n    public pourcentage: number;\r\n  \r\n    constructor(\r\n    titre: string, pourcentage: number) {\r\n    this.titre = titre;\r\n    this.pourcentage = pourcentage;\r\n    }\r\n  } \r\n  ","import { AngularFirestore } from '@angular/fire/firestore';\r\nimport 'rxjs/add/operator/map';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject, BehaviorSubject, Observable } from 'rxjs';\r\nimport { Technologie } from './technologie.model';\r\nimport { Utilisateur } from '../utilisateur.model';\r\n\r\n\r\n@Injectable()\r\nexport class TechnologieService{\r\n    \r\n    constructor(private afs: AngularFirestore) {\r\n    }\r\n    technologiesLocalTmp : Technologie[];\r\n    technologiesChanged = new Subject<Technologie[]>();\r\n    technologieLocalTmp : Technologie[];\r\n    technologieChanged = new Subject<Technologie[]>();\r\n    technologiesDisponibleChanged = new Subject<Technologie[]>();\r\n\r\n    getTechnologies(docUtilisateurId: any){\r\n        //return this.afs.collection('emplois').valueChanges();\r\n        return this.afs.collection<any>('utilisateurs').doc(docUtilisateurId).collection('technologies', ref => ref.orderBy('pourcentage'))\r\n        .snapshotChanges()\r\n            .map(actions => {\r\n                return actions.map(action => ({ \r\n                    $key: action.payload.doc.id,\r\n                    ...action.payload.doc.data()\r\n                }));\r\n            })\r\n            .subscribe(\r\n                (response: any[]) => {\r\n                    this.technologiesLocalTmp = response;\r\n                    this.technologiesChanged.next([...this.technologiesLocalTmp]); // spread operator to create a copy\r\n                }\r\n            );\r\n    }\r\n\r\n    getTechnologie(docUtilisateurId: any, docTechnologieId: any) : Observable<Technologie>{\r\n        return this.afs.collection<Utilisateur>('utilisateurs').doc(docUtilisateurId).collection<Technologie>('technologies').doc<Technologie>(docTechnologieId).valueChanges();\r\n    }\r\n    \r\n    ajouterTechnologie(docUtilisateurId: any, technologie: Technologie){\r\n        let technologieJSON = JSON.parse(JSON.stringify(technologie))\r\n        return this.afs.collection<Utilisateur>('utilisateurs').doc(docUtilisateurId).collection<Technologie>('technologies').add(technologieJSON);\r\n    }\r\n\r\n    supprimerTechnologie(docUtilisateurId: any, docTechnologieId: any){\r\n        return this.afs.collection<Utilisateur>('utilisateurs').doc(docUtilisateurId).collection<Technologie>('technologies').doc(docTechnologieId).delete();\r\n    }\r\n\r\n    modifierTechnologie(docUtilisateurId: any, docTechnologieId: any, technologie: Technologie){\r\n        let technologieJSON = JSON.parse(JSON.stringify(technologie))\r\n        return this.afs.collection('utilisateurs').doc(docUtilisateurId).collection('technologies').doc(docTechnologieId).update(technologieJSON);\r\n    }\r\n\r\n    getTechnologiesDisponible(){ //From Administrator Database\r\n        return this.afs.collection<any>('technologies_disponibles')\r\n        .snapshotChanges()\r\n            .map(actions => {\r\n                return actions.map(action => ({\r\n                    ...action.payload.doc.data()\r\n                }));\r\n            })\r\n            .subscribe(\r\n                (response: any[]) => {\r\n                    this.technologiesDisponibleChanged.next([...response]); // spread operator to create a copy\r\n                }\r\n            );\r\n    }\r\n\r\n    ajouterTechnologieDisponible(technologieDisponible: string){\r\n        return this.afs.collection('technologies_disponibles').add({'titre': technologieDisponible});\r\n    }\r\n\r\n}","module.exports = \"<div class=\\\"container\\\"><div class=\\\"separation\\\"></div></div>\\r\\n  <!-- /.container -->\\r\\n\\r\\n  <div class=\\\"bloc-profil\\\">\\r\\n      <div class=\\\"container\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-1\\\">\\r\\n                <div class=\\\"avatar\\\">\\r\\n                    <img [attr.src]=\\\"imgProfil\\\"  class=\\\"img-circle shadow\\\" alt=\\\"\\\" width=\\\"80\\\">\\r\\n                    <div><button type=\\\"button\\\" class=\\\"btn-modifier\\\" mat-button (click)=\\\"imageProfilInput.click()\\\">Modifier</button></div>\\r\\n                    <input hidden type=\\\"file\\\" #imageProfilInput class=\\\"hidden\\\" (change)=\\\"changeImageProfil($event)\\\">\\r\\n                </div>\\r\\n                <!-- /.avatar -->\\r\\n            </div>\\r\\n            <!-- /.col-sm-1 -->          \\r\\n            <div class=\\\"col-sm-5\\\">\\r\\n                <div class=\\\"desc-profil\\\">\\r\\n                    <div class=\\\"nom-membre\\\">\\r\\n                        {{utilisateur?.nom_utilisateur}}\\r\\n                    </div>\\r\\n                    <!-- /.nom-membre -->\\r\\n                    <div class=\\\"nom-profil\\\">\\r\\n                        {{utilisateur?.nom}}\\r\\n                    </div>\\r\\n                    <!-- /.nom-membre -->\\r\\n                    <div class=\\\"clearfix\\\"></div>\\r\\n                </div>\\r\\n                <!-- /.desc-profil -->\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6 text-right btn-deconnexion\\\">\\r\\n                <button type=\\\"button\\\" mat-button color=\\\"warn\\\" (click)=\\\"onClickDeconnexion()\\\">Déconnexion</button>\\r\\n            </div>\\r\\n        </div>\\r\\n          \\r\\n      </div>\\r\\n      <!-- /.container -->\\r\\n  </div>\\r\\n  <!-- /.bloc-profil -->\\r\\n\\r\\n  <div class=\\\"menu-profil\\\">\\r\\n      <a href=\\\"\\\" class=\\\"active\\\">\\r\\n          <i class=\\\"material-icons\\\">error</i>\\r\\n          <span>Profil</span>\\r\\n      </a>\\r\\n      <a href=\\\"\\\">\\r\\n          <i class=\\\"material-icons\\\">error</i>\\r\\n          <span>Candidature</span>\\r\\n      </a>\\r\\n      <a href=\\\"\\\">\\r\\n          <i class=\\\"material-icons\\\">notifications_active</i>\\r\\n          <span>Alerte Job</span>\\r\\n      </a>\\r\\n      <a href=\\\"\\\">\\r\\n          <i class=\\\"material-icons\\\">favorite</i>\\r\\n          <span>Sauvegargdés</span>\\r\\n      </a>\\r\\n  </div>\\r\\n  <!-- /.menu-profil -->\\r\\n  \\r\\n  <div class=\\\"container\\\">\\r\\n    <form #formProfil=\\\"ngForm\\\" (ngSubmit)=\\\"onClickMettreAJour(formProfil)\\\">\\r\\n      <div class=\\\"info-etape\\\">\\r\\n          Compléter votre profil : 4 étapes restantes\\r\\n      </div>\\r\\n      <!-- /.info-etape -->\\r\\n      <div *ngIf=\\\"statusCompte\\\">\\r\\n        <div class=\\\"bloc-option-profil\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"titre-option-profil\\\">\\r\\n                        Uploader votre CV\\r\\n                    </div>\\r\\n                    <!-- /.titre-option-profil -->\\r\\n\\r\\n                    <div class=\\\"row\\\" *ngIf=\\\"downloadCvURLInitial || (downloadCvURLChanged | async) || afficheProgress\\\">\\r\\n                        <div class=\\\"col-sm-12\\\"> \\r\\n                            <table class=\\\"highlight\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                <th>CV</th>\\r\\n                                <th>Actions</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                    \\r\\n                            <tbody>\\r\\n                                <tr>\\r\\n                                <td>\\r\\n                                    <mat-progress-bar *ngIf=\\\"afficheProgress\\\" mode=\\\"determinate\\\" [value]=\\\"uploadCvPercent | async\\\"></mat-progress-bar>\\r\\n                                    \\r\\n                                    <a *ngIf=\\\"downloadCvURLInitial && !(downloadCvURLChanged | async)\\\" [href]=\\\"downloadCvURLInitial\\\" target=\\\"_blank\\\">Votre CV</a>\\r\\n                                    <a *ngIf=\\\"downloadCvURLChanged | async\\\" [href]=\\\"downloadCvURLChanged | async\\\" target=\\\"_blank\\\">Votre nouveau CV</a>\\r\\n                                </td>\\r\\n                                <td class=\\\"action\\\"> \\r\\n                                    <i *ngIf=\\\"downloadCvURLInitial || (downloadCvURLChanged | async)\\\" class=\\\"material-icons \\\" (click)=\\\"onClickSupprimerCV($event)\\\">delete</i>\\r\\n                                </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                        <!-- /.col-sm-12 -->\\r\\n                    </div>\\r\\n                    <!-- /.row -->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-xs-4\\\">\\r\\n                            <br>\\r\\n                            <button type=\\\"button\\\" class=\\\"bg-rouge\\\" mat-button color=\\\"warn\\\" mat-flat-button (click)=\\\"fileInput.click()\\\">\\r\\n                                Uploader <i class=\\\"fa fa-search\\\"></i>\\r\\n                            </button>\\r\\n                            <input hidden type=\\\"file\\\" #fileInput class=\\\"hidden\\\" (change)=\\\"uploadFile($event)\\\">\\r\\n                            \\r\\n                            \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- /.row -->\\r\\n                </div>\\r\\n                <!-- /.col-sm-6 -->\\r\\n            </div>\\r\\n            <!-- /.row -->\\r\\n        </div>\\r\\n        <!-- /.bloc-option-profil -->\\r\\n      <div class=\\\"bloc-option-profil\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"titre-option-profil\\\">\\r\\n                      Quel type de job vous recherchez?\\r\\n                  </div>\\r\\n                  <!-- /.titre-option-profil -->\\r\\n                  <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-xs-4\\\">\\r\\n                          <!-- <button class=\\\"waves-effect waves-light btn btn-type-contrat large (class.active disponible)\\\">plein temps</button> -->\\r\\n                          <button type=\\\"button\\\" mat-flat-button [ngClass]=\\\"{'bg-rouge': typeContrat === 'plein temps'}\\\" (click)=\\\"onClickTypeContrat('plein temps')\\\" class=\\\"bg-blanc large btn-type-contrat\\\">plein temps</button>\\r\\n                          \\r\\n                      </div>\\r\\n                      <!-- /.col-xs-6 -->\\r\\n                      <div class=\\\"col-xs-4\\\">\\r\\n                          <!-- <button class=\\\"waves-effect waves-light btn btn-type-contrat large (class.active disponible)\\\">temps partiel</button> -->\\r\\n                          <button type=\\\"button\\\" mat-flat-button [ngClass]=\\\"{'bg-rouge': typeContrat === 'temps partiel'}\\\" (click)=\\\"onClickTypeContrat('temps partiel')\\\" class=\\\"bg-blanc large btn-type-contrat\\\">temps partiel</button>\\r\\n                      </div>\\r\\n                      <!-- /.col-xs-6 -->\\r\\n                  </div>\\r\\n                  <!-- /.row -->\\r\\n              </div>\\r\\n              <!-- /.col-sm-6 -->\\r\\n              <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"titre-option-profil\\\">\\r\\n                      Résumé\\r\\n                  </div>\\r\\n                  <!-- /.titre-option-profil -->\\r\\n                  <div class=\\\"input-group container-editable\\\">\\r\\n                      <span class=\\\"edit-champ\\\"><i class=\\\"material-icons\\\">create</i></span>\\r\\n\\r\\n                      <textarea [(ngModel)]=\\\"resumeAF\\\" name=\\\"resume\\\" id=\\\"textarea1\\\" class=\\\"champ-input materialize-textarea\\\" placeholder=\\\"Présentez-vous avec un court résumé et captez l'attention des employeurs en mettant en évidence vos meilleures caractéristiques et compétences.\\\" ></textarea>\\r\\n                      <div class=\\\"row\\\">\\r\\n                          <div class=\\\"col-sm-4\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"bg-rouge\\\" mat-button color=\\\"warn\\\" mat-flat-button (click)=\\\"onClickEnregistrerResume(formProfil)\\\">\\r\\n                                Enregistrer <i class=\\\"fa fa-search\\\"></i>\\r\\n                            </button>\\r\\n                          </div>\\r\\n                          <!-- /.col-sm-2 -->\\r\\n                      </div>\\r\\n                      <!-- /.row -->\\r\\n                  </div>\\r\\n                  <!-- /.input-group -->\\r\\n                  \\r\\n              </div>\\r\\n              <!-- /.col-sm-6 -->\\r\\n          </div>\\r\\n          <!-- /.row -->\\r\\n      </div>\\r\\n      <!-- /.bloc-option-profil -->\\r\\n\\r\\n      <app-education   *ngIf=\\\"utilisateur\\\"     [groupFormEducation]=\\\"formProfil\\\" [keyUtilisateur]=\\\"utilisateur.$key\\\"></app-education>\\r\\n      <app-experience  *ngIf=\\\"utilisateur\\\"    [groupFormExperience]=\\\"formProfil\\\" [keyUtilisateur]=\\\"utilisateur.$key\\\"></app-experience>\\r\\n      <app-langue      *ngIf=\\\"utilisateur\\\"        [groupFormLangue]=\\\"formProfil\\\" [keyUtilisateur]=\\\"utilisateur.$key\\\"></app-langue>\\r\\n      <app-technologie *ngIf=\\\"utilisateur\\\"   [groupFormTechnologie]=\\\"formProfil\\\" [keyUtilisateur]=\\\"utilisateur.$key\\\"></app-technologie>\\r\\n      \\r\\n      \\r\\n      \\r\\n\\r\\n      <div class=\\\"bloc-option-profil\\\">\\r\\n          <div class=\\\"titre-option-profil souligne\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-4\\\">\\r\\n                      Motivations\\r\\n                  </div>\\r\\n                  <!-- /.col-sm-4 -->\\r\\n              </div>\\r\\n              <!-- /.row --> \\r\\n          </div>\\r\\n          <!-- /.titre-option-profil -->\\r\\n          <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"txt-infos-profil\\\">\\r\\n                      Raffiner votre rénumération annuelle souhaitée et les axes de motivation, ...\\r\\n                  </div>\\r\\n                  <!-- /.txt-infos-profil -->\\r\\n              </div>\\r\\n              <!-- /.col-sm-6 -->\\r\\n          </div>\\r\\n          <!-- /.row -->\\r\\n          <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-5\\\">\\r\\n                <app-renumeration *ngIf=\\\"utilisateur\\\" [groupFormRenumeration]=\\\"formProfil\\\" [keyUtilisateur]=\\\"utilisateur.$key\\\"></app-renumeration>\\r\\n                <br><label class=\\\"label-input\\\">Axe de motivation</label><br>\\r\\n                <textarea class=\\\"champ-input materialize-textarea\\\" [ngModel]=\\\"axeAF\\\" name=\\\"axeMotivation\\\" style=\\\"width:100%; height:120px;\\\"></textarea>\\r\\n                \\r\\n              </div>\\r\\n              <!-- /.col-sm-4 -->\\r\\n              <div class=\\\"col-sm-6 col-sm-push-1\\\">\\r\\n                  <div class=\\\"input-group input-sivp\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                          <div class=\\\"col-sm-4\\\">\\r\\n                              \\r\\n                          </div>\\r\\n                          <!-- /.col-sm-3 -->\\r\\n                          <div class=\\\"col-sm-5\\\">\\r\\n                            <mat-slide-toggle \\r\\n                            color=\\\"warn\\\"\\r\\n                            (change)=\\\"onClickStatusSivp()\\\"\\r\\n                            [checked]=\\\"dureeSivpStatus\\\">\\r\\n                            Eligible au SIVP</mat-slide-toggle>\\r\\n                          </div>\\r\\n                          <!-- /.col-sm-3 -->\\r\\n                      </div>\\r\\n                      <!-- /.row -->\\r\\n                      <label class=\\\"label-input txt-sivp\\\">Durée SIVP restante ( <span *ngIf=\\\"dureeSivpAF!==undefined\\\">{{dureeSivpAF}}</span> mois )</label>\\r\\n                      <div class=\\\"range-field\\\">\\r\\n                          <label class=\\\"espacement\\\"></label>\\r\\n                          <mat-slider style=\\\"width: 100%\\\"\\r\\n                            name=\\\"dureeSivp\\\"\\r\\n                            \\r\\n                            [disabled]=\\\"!dureeSivpStatus\\\"\\r\\n                            [(ngModel)]=\\\"dureeSivpAF\\\"\\r\\n                            (change)=\\\"onChangeSivp($event)\\\"\\r\\n                            thumbLabel\\r\\n                            [displayWith]=\\\"formatLabel\\\"\\r\\n                            tickInterval=\\\"24\\\"\\r\\n                            min=\\\"1\\\"\\r\\n                            max=\\\"24\\\"\\r\\n                            color=\\\"warn\\\">\\r\\n                          </mat-slider>\\r\\n                          <div class=\\\"pull-left pourcentage\\\">\\r\\n                              1\\r\\n                          </div>\\r\\n                          <!-- /.pull-left pourcentage -->\\r\\n                          <div class=\\\"pull-right pourcentage\\\">\\r\\n                              24\\r\\n                          </div>\\r\\n                          <!-- /.pull-left pourcentage -->\\r\\n                          <div class=\\\"clearfix\\\"></div>\\r\\n                          <!-- /.clearfix -->\\r\\n                        </div>\\r\\n                  </div>\\r\\n                  <!-- /.input-group -->\\r\\n              </div>\\r\\n              <!-- /.col-sm-8 -->\\r\\n          </div>\\r\\n          <!-- /.row -->\\r\\n      </div>\\r\\n      <!-- /.bloc-option-profil -->\\r\\n      \\r\\n      <div class=\\\"bloc-option-profil\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-4\\\">\\r\\n                  <button class=\\\"waves-effect waves-light btn large\\\">mettre à jour le profil</button>\\r\\n              </div>\\r\\n              <!-- /.col-sm-4 -->\\r\\n          </div>\\r\\n          <!-- /.row -->\\r\\n      </div>\\r\\n      <!-- /.bloc-option-profil -->\\r\\n\\r\\n      <div class=\\\"bloc-option-profil\\\">\\r\\n          <div class=\\\"titre-option-profil souligne\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-4\\\">\\r\\n                      CHANGER LE MOT DE PASSE\\r\\n                  </div>\\r\\n                  <!-- /.col-sm-4 -->\\r\\n              </div>\\r\\n              <!-- /.row --> \\r\\n          </div>\\r\\n          <!-- /.titre-option-profil -->\\r\\n          <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-4\\\">\\r\\n                  <mat-form-field class=\\\"large mp\\\">\\r\\n                    <input name=\\\"ancienMotDePasse\\\" matInput placeholder=\\\"Mot de passe actuel\\\" type=\\\"password\\\" ngModel required>\\r\\n                  </mat-form-field>\\r\\n              </div>\\r\\n              <!-- /.col-sm-4 -->\\r\\n              <div class=\\\"col-sm-4\\\">\\r\\n                <mat-form-field class=\\\"large mp\\\">\\r\\n                    <input name=\\\"newMotDePasse\\\" matInput placeholder=\\\"Nouveau mot de passe\\\" type=\\\"password\\\" ngModel required>\\r\\n                  </mat-form-field>\\r\\n              </div>\\r\\n              <!-- /.col-sm-4 -->\\r\\n              <div class=\\\"col-sm-4\\\">\\r\\n                  <div class=\\\"input-group input-mp\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"waves-effect waves-light btn large\\\" (click)=\\\"onClickModifierMotPasse()\\\">CHANGER LE MOT DE PASSE</button>\\r\\n                  </div>\\r\\n                  <!-- /.input-group -->\\r\\n              </div>\\r\\n              <!-- /.col-sm-4 -->\\r\\n          </div>\\r\\n          <!-- /.row -->\\r\\n      </div>\\r\\n      <!-- /.bloc-option-profil -->\\r\\n    </div>\\r\\n    <div class=\\\"bloc-option-profil\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"waves-effect waves-light btn btn-type-contrat large\\\" (click)=\\\"onClickSupprimerCompte()\\\"><span *ngIf=\\\"statusCompte, else activer\\\">Désactiver </span><ng-template #activer>Activer </ng-template> mon compte</button>\\r\\n            </div>\\r\\n            <!-- /.col-sm-4 -->\\r\\n        </div>\\r\\n        <!-- /.row -->\\r\\n    </div>\\r\\n    <!-- /.bloc-option-profil -->\\r\\n    </form>  \\r\\n  </div>\\r\\n  <!-- /.container -->\\r\\n\"","module.exports = \"\"","import { Component, OnInit , ViewChild} from '@angular/core';\r\nimport { UtilisateurService } from './utilisateur.service';\r\nimport { InscriptionService } from '../inscription/inscription.service';\r\nimport { Utilisateur } from './utilisateur.model';\r\nimport { Observable } from 'rxjs';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MatSnackBar, MatSnackBarConfig, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition,} from '@angular/material';\r\nimport { AngularFireStorage } from '@angular/fire/storage';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-utilisateur',\r\n  templateUrl: './utilisateur.component.html',\r\n  styleUrls: ['./utilisateur.component.scss']\r\n})\r\nexport class UtilisateurComponent implements OnInit {\r\n\r\n  constructor(private inscriptionService: InscriptionService, private utilisateurService: UtilisateurService, public snackBar: MatSnackBar, private storage: AngularFireStorage) { }\r\n\r\n  @ViewChild('formProfil') formProfil: NgForm;\r\n  typeContrat: string;\r\n  utilisateurs: Utilisateur[];\r\n  utilisateur: Utilisateur;\r\n  resumeAF: string;\r\n  axeAF: string;\r\n  dureeSivpAF: number = 10;\r\n  utilisateurCourant: any;\r\n  dureeSivpStatus : boolean = true;\r\n  \r\n  uploadCvPercent: Observable<number>;\r\n  cvUtilisateurAF: Observable<string | null>;\r\n  downloadCvURLChanged: Observable<string>;\r\n  downloadCvURLInitial: string;\r\n  config = new MatSnackBarConfig()\r\n  statusCv: boolean = false;\r\n  imgProfil: string;\r\n  imgTab: string[];\r\n  urlImgProfil: string;\r\n  afficheProgress: boolean = false;\r\n  statusCompte: boolean = false;\r\n\r\n  ngOnInit() {\r\n\r\n    this.utilisateurService.utilisateurChanged.subscribe(datas => {\r\n      this.utilisateurs = datas;\r\n      this.utilisateur = this.utilisateurs[0];\r\n      this.typeContrat = this.utilisateur.type_contrat;\r\n      this.utilisateurService.setDocUtilisateurId(this.utilisateur.$key);\r\n      this.resumeAF = this.utilisateur.resume;\r\n      this.axeAF = this.utilisateur.axe_motivation;\r\n      this.dureeSivpStatus = this.utilisateur.sivp;\r\n      this.dureeSivpAF = this.utilisateur.duree_sivp;\r\n      this.statusCv = this.utilisateur.cv;\r\n      this.urlImgProfil = this.utilisateur.image;\r\n      this.statusCompte = this.utilisateur.status;      \r\n        \r\n      const refProfil = this.storage.ref('utilisateurs/'+this.utilisateur.nom_utilisateur+'/image-profil-'+this.utilisateur.nom_utilisateur);\r\n      refProfil.getDownloadURL().subscribe(data =>{\r\n        this.imgProfil = data;\r\n      },\r\n      error=>{\r\n        this.imgProfil = \"assets/images/avatar.png\"\r\n      });\r\n\r\n      if(this.statusCv){\r\n        const refCv = this.storage.ref('utilisateurs/'+this.utilisateur.nom_utilisateur+'/cv-'+this.utilisateur.nom_utilisateur);\r\n        refCv.getDownloadURL().subscribe(data =>{\r\n          this.downloadCvURLInitial = data;\r\n        });\r\n      }        \r\n      \r\n      \r\n    });\r\n    //this.utilisateurService.getUtilisateurDev();\r\n    this.utilisateurService.getUtilisateur();\r\n    this.config.duration = 5000;    \r\n     \r\n  }\r\n\r\n  onClickDeconnexion(){\r\n    this.inscriptionService.deconnexionUtilisateur();\r\n  }\r\n\r\n  onClickSupprimerCompte(){\r\n    this.statusCompte =!this.statusCompte;\r\n    this.utilisateur.status = this.statusCompte;\r\n    this.modifierUtilisateur();\r\n  }\r\n\r\n  onClickModifierMotPasse(){\r\n    this.inscriptionService.changerMotPasseUtilisateur(this.utilisateur.email, this.formProfil.value.ancienMotDePasse, this.formProfil.value.newMotDePasse)\r\n    .then(\r\n        result1 => {\r\n            result1.user.updatePassword(this.formProfil.value.newMotDePasse).then(result =>{\r\n                this.inscriptionService.updateUtilisateurCourant(result1.user);\r\n                this.afficherNotification('Mot de passe Modifié', 'background-verte');\r\n                this.formProfil.controls['ancienMotDePasse'].setValue('');\r\n                this.formProfil.controls['newMotDePasse'].setValue('');\r\n              }\r\n            )\r\n            .catch(error=>{\r\n                this.afficherNotification('Entrer un nouveau mot de passe valide', 'background-rouge');\r\n            })\r\n            \r\n        }\r\n    )\r\n    .catch(\r\n        error =>{\r\n            this.afficherNotification('Ancien mot de passe invalide', 'background-rouge');\r\n        }\r\n    );\r\n  }\r\n  onClickSupprimerCV(event){\r\n    const filePath = 'utilisateurs/'+this.utilisateur.nom_utilisateur+'/cv-'+this.utilisateur.nom_utilisateur;\r\n    const fileRef = this.storage.ref(filePath).delete();\r\n    this.downloadCvURLInitial = undefined;\r\n    this.downloadCvURLChanged = undefined;\r\n    this.utilisateur.cv = false;\r\n    this.modifierUtilisateur();\r\n  }\r\n  uploadFile(event) {\r\n    const file = event.target.files[0];\r\n    const filePath = 'utilisateurs/'+this.utilisateur.nom_utilisateur+'/cv-'+this.utilisateur.nom_utilisateur;\r\n    const fileRef = this.storage.ref(filePath);\r\n    const task = this.storage.upload(filePath, file);\r\n     // observe percentage changes\r\n    this.uploadCvPercent = task.percentageChanges();\r\n\r\n    // get notified when the download URL is available\r\n    task.snapshotChanges().pipe(\r\n        finalize(() => {\r\n        this.downloadCvURLChanged = fileRef.getDownloadURL();\r\n        console.log(\"votre cv\")\r\n        console.log(this.downloadCvURLInitial)\r\n        this.downloadCvURLInitial = undefined;\r\n        this.afficheProgress = false;\r\n        this.utilisateur.cv = true;\r\n        this.modifierUtilisateur();\r\n        }\r\n      )\r\n     )\r\n    .subscribe(data =>{\r\n      this.downloadCvURLInitial = undefined;\r\n      this.afficheProgress = true;\r\n    })\r\n  }\r\n  changeImageProfil(event) {\r\n    const file = event.target.files[0];\r\n    const filePath = 'utilisateurs/'+this.utilisateur.nom_utilisateur+'/image-profil-'+this.utilisateur.nom_utilisateur;\r\n    const fileRef = this.storage.ref(filePath);\r\n    const task = this.storage.upload(filePath, file);\r\n     // observe percentage changes\r\n    this.uploadCvPercent = task.percentageChanges();\r\n\r\n    // get notified when the download URL is available\r\n    task.snapshotChanges().pipe(\r\n        finalize(() => {\r\n        fileRef.getDownloadURL().subscribe(data =>{\r\n          this.imgProfil = data;\r\n        });\r\n        }\r\n      )\r\n     )\r\n    .subscribe()\r\n  }\r\n\r\n  formatLabel(value: number | null) {\r\n    if (!value) {\r\n      return 0;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  onChangeSivp(event){\r\n    \r\n  }\r\n\r\n  onClickStatusSivp(){\r\n    this.dureeSivpStatus=!this.dureeSivpStatus; \r\n    if(!this.dureeSivpStatus){this.dureeSivpAF=0}\r\n  }\r\n\r\n  afficherNotification(message: string, couleur: string){\r\n    this.config.panelClass = [couleur];\r\n    this.snackBar.open(message, undefined, this.config);\r\n  }\r\n  \r\n  modifierUtilisateur(){\r\n    this.utilisateurService.modifierUtilisateur(this.utilisateur).then(\r\n        result => {\r\n            this.afficherNotification('Sauvegardé', 'background-verte');\r\n        }\r\n    )\r\n    .catch(\r\n        error =>{\r\n            this.afficherNotification('Sauvegarde non réussi', 'background-rouge');\r\n        }\r\n    );\r\n  }\r\n\r\n  onClickEnregistrerResume(form: NgForm){\r\n    this.utilisateur.resume = form.value.resume;\r\n    this.modifierUtilisateur();\r\n  }\r\n\r\n  onClickMettreAJour(){\r\n    this.utilisateur.resume = this.formProfil.value.resume;\r\n    this.utilisateur.axe_motivation = this.formProfil.value.axeMotivation;\r\n    this.utilisateur.sivp = this.dureeSivpStatus;\r\n    this.utilisateur.duree_sivp = this.dureeSivpAF;\r\n    this.modifierUtilisateur();\r\n  }\r\n\r\n  onClickTypeContrat(typeContratPassed: string){\r\n    this.utilisateur.type_contrat = typeContratPassed;\r\n    this.modifierUtilisateur();\r\n  }\r\n\r\n} \r\n","import { AngularFirestore } from '@angular/fire/firestore';\r\nimport 'rxjs/add/operator/map';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\nimport { Utilisateur } from './utilisateur.model';\r\n\r\n\r\n@Injectable()\r\nexport class UtilisateurService{\r\n    \r\n    constructor(private afs: AngularFirestore) {\r\n    }\r\n\r\n    tmpIdUtilisateur: any;\r\n    docUtilisateurId: string;\r\n    utilisateursLocalTmp : Utilisateur[];\r\n    utilisateursChanged = new Subject<Utilisateur[]>();\r\n    utilisateurLocalTmp : Utilisateur[];\r\n    utilisateurChanged = new Subject<Utilisateur[]>();\r\n\r\n    getUtilisateurs(){\r\n        //return this.afs.collection('emplois').valueChanges();\r\n        return this.afs.collection<any>('utilisateurs')\r\n        .snapshotChanges()\r\n            .map(actions => {\r\n                return actions.map(action => ({ \r\n                    $key: action.payload.doc.id, \r\n                    ...action.payload.doc.data() \r\n                }));\r\n            })\r\n            .subscribe(\r\n                (response: Utilisateur[]) => {\r\n                    this.utilisateursLocalTmp = response;\r\n                    this.utilisateursChanged.next([...this.utilisateursLocalTmp]); // spread operator to create a copy\r\n                }\r\n            );\r\n    }\r\n\r\n    getUtilisateur(){\r\n        return this.afs.collection<any>('utilisateurs', ref => ref.where('id', '==', this.tmpIdUtilisateur))\r\n        .snapshotChanges()\r\n            .map(actions => {\r\n                return actions.map(action => ({ \r\n                    $key: action.payload.doc.id, \r\n                    ...action.payload.doc.data() \r\n                }));\r\n            })\r\n            .subscribe(\r\n                (response: Utilisateur[]) => {\r\n                    this.utilisateurLocalTmp = response;\r\n                    this.utilisateurChanged.next([...this.utilisateurLocalTmp]);\r\n                }\r\n            );\r\n            \r\n    }\r\n\r\n    getUtilisateurDev(){\r\n        return this.afs.collection<any>('utilisateurs', ref => ref.where('id', '==', 'QR7DZXIF8hR1x6vwc8MlmOtfAt22'))\r\n        .snapshotChanges()\r\n            .map(actions => {\r\n                return actions.map(action => ({ \r\n                    $key: action.payload.doc.id, \r\n                    ...action.payload.doc.data() \r\n                }));\r\n            })\r\n            .subscribe(\r\n                (response: Utilisateur[]) => {\r\n                    this.utilisateurLocalTmp = response;\r\n                    this.utilisateurChanged.next([...this.utilisateurLocalTmp]);\r\n                }\r\n            );\r\n            \r\n    }\r\n\r\n    setDocUtilisateurId(id: any){\r\n        this.docUtilisateurId = id; // On n'utilise plus l'id d'authentification, on utilise le key de document utilisateur\r\n    }\r\n\r\n    getDocUtilisateurId(){\r\n        return this.docUtilisateurId; // On n'utilise plus l'id d'authentification, on utilise le key de document utilisateur\r\n    }\r\n\r\n    creerUtilisateur(nom_utilisateur:any, email: any, id: any){\r\n        const listeUtilisateurs = this.afs.collection<any>('utilisateurs');\r\n        listeUtilisateurs.add({nom_utilisateur: nom_utilisateur, email: email, id: id });\r\n        this.tmpIdUtilisateur = id; // On retourne l'id utilisée par l'autentification pour l'utiliser après pour getUtilisateur()\r\n    }\r\n\r\n    connecterUtilisateur(id: string){\r\n        this.tmpIdUtilisateur = id; // On retourne l'id utilisée par l'autentification pour l'utiliser après pour getUtilisateur()\r\n    }\r\n\r\n    modifierUtilisateur(utilisateur: Utilisateur){\r\n        return this.afs.collection('utilisateurs').doc(this.getDocUtilisateurId()).update(utilisateur)\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}